{"version":3,"sources":["components/stats/Statistic.js","utils/stringutil.js","components/stats/Panel.js","containers/Stats.js"],"names":["Statistic","_ref","x","heading","_ref$value","value","_jsxs","className","children","_jsx","toString","replace","StatisticPanel","title","show","_Fragment","Stats","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","playerFilter","levelFilter","solvedLevels","totalCompleted","totalCreated","totalFailures","totalPlayers","chainId","lang","localStorage","getItem","web3","window","ethereum","request","method","then","id","setState","Number","_createClass","key","prevProps","prevState","this","collectsGlobalStats","_collectsGlobalStats","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","completed","created","failures","wrap","_context","prev","next","Promise","all","getTotalCompleted","getTotalCreated","getTotalFailures","getTotalPlayers","sent","_slicedToArray","toNumber","stop","apply","arguments","_collectPlayerStats","_callee2","playerAddress","levels","_context2","checkIfPlayerExist","getLevelsSolvedByPlayer","document","querySelectorAll","style","display","abrupt","playerExists","levelsSolved","_x","_updatePlayerStats","_callee3","stats","_context3","validateAddress","collectPlayerStats","sort","a","b","difficulty","_x2","_this2","type","placeholder","onChange","_callee4","evt","_context4","preventDefault","updatePlayerStats","target","_x3","onKeyDown","_ref2","_callee5","_context5","_x4","length","map","level","name","difficultyCircles","Footer","React","Component","connect","network","dispatch","bindActionCreators","collectStats","actions"],"mappings":"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","file":"static/js/6.103c58ca.chunk.js","sourcesContent":["import React from \"react\";\nimport { formatNumberWithComma } from \"../../utils/stringutil\";\n\nexport default function Statistic({\n    heading,\n    value = 0\n}) {\n  return <section className=\"statisticscomponent\">\n    <h5 className=\"statisticscomponent__header\">\n        {heading}\n    </h5>\n    <p className=\"statisticscomponent__content\">\n        {formatNumberWithComma(value)}\n    </p>\n  </section>;\n}\n","export function validateEmail(email) {\n  // eslint-disable-next-line\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regex.test(email);\n}\n\nexport function validateNotEmpty(value) {\n  return !!(value && value.trim());\n}\n\nexport function formatNumberWithComma(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React from \"react\";\n\nexport default function StatisticPanel({ children, title, show }) {\n  if(!show) return <></>;\n  return (\n    <section className=\"statisticspanel\">\n      <h5 className=\"statisticspanel__header\">{title}</h5>\n      <div className=\"statisticspanel__content\">{children}</div>\n    </section>\n  );\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport '../styles/page.css'\nimport * as actions from '../actions';\nimport { getLevelsSolvedByPlayer, checkIfPlayerExist, getTotalCompleted, getTotalFailures, getTotalCreated, getTotalPlayers } from '../utils/statsContract'\nimport { validateAddress } from '../utils/ethutil'\nimport Statistic from '../components/stats/Statistic';\nimport StatisticPanel from '../components/stats/Panel';\nimport Footer from \"../components/common/Footer\";\n\nclass Stats extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      playerFilter: '',\n      levelFilter: '',\n      solvedLevels: [],\n      totalCompleted: 0,\n      totalCreated: 0,\n      totalFailures: 0,\n      totalPlayers: 0,\n      chainId: 0,\n      lang: localStorage.getItem(\"lang\"),\n    }\n\n    if (this.props.web3) {\n      window.ethereum.request({ method: 'eth_chainId' }).then((id) => {\n        this.setState({ chainId: Number(id) });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState ) {\n    if (this.props.web3 && prevProps.web3 !== this.props.web3) {\n      this.collectsGlobalStats();\n    }\n  }\n\n  async collectsGlobalStats() {\n    const [completed, created, failures, totalPlayers] = await Promise.all([\n      getTotalCompleted(this.state.chainId),\n      getTotalCreated(this.state.chainId),\n      getTotalFailures(this.state.chainId),\n      getTotalPlayers(this.state.chainId)\n    ])\n    this.setState({\n      totalCompleted: completed ? completed.toNumber() : 0,\n      totalCreated: created ? created.toNumber() : 0,\n      totalFailures: failures ? failures.toNumber() : 0,\n      totalPlayers: totalPlayers ? totalPlayers.toNumber() : 0,\n    })\n  }\n\n  async collectPlayerStats(playerAddress) {\n    var itExists = await checkIfPlayerExist(playerAddress, this.state.chainId)\n      if(itExists) {\n        var levels = await getLevelsSolvedByPlayer(playerAddress, this.state.chainId)\n        \n        //loader off\n        const elements = document.querySelectorAll('.progress-bar-wrapper');\n        elements[0].style.display = 'none';\n        \n        // Resolve address of levels with name\n        // Resolve number of levels solved\n\n        //Show solved levels\n        return {\n          playerExists: true,\n          levelsSolved: levels\n        }\n      } else {\n        // loader off\n        const elements = document.querySelectorAll('.progress-bar-wrapper');\n        elements[0].style.display = 'none';\n        //Show player doesn't exist\n        return {\n          playerExists: false,\n          levelsSolved: []\n        }\n      }\n\n  }\n\n  async updatePlayerStats(playerAddress) {\n    if(validateAddress(playerAddress)) {\n      //loader on\n      var progressBar = document.querySelectorAll('.progress-bar-wrapper')[0];\n      progressBar.style.display = 'flex';\n\n      this.setState({playerFilter: playerAddress});\n\n      var stats = await this.collectPlayerStats(playerAddress);\n      // sort the levels and display in acending level of difficulty\n      // woth noting that the sort is 'inplace'\n      stats?.levelsSolved.sort((a, b) => +a.difficulty - +b.difficulty)\n      this.setState({\n        solvedLevels: stats?.levelsSolved\n      })\n    }\n  }\n\n  render() {\n      return <div className=\"stats-page page-container\">\n      <div className='stats-header'>\n        <Statistic heading=\"Total number of players\" value={this.state.totalPlayers} />\n        <Statistic heading=\"Total number of instances created\" value={this.state.totalCreated} />\n        <Statistic heading=\"Total number of instances solved\" value={this.state.totalCompleted} />\n        <Statistic heading=\"Total number of instances failed\" value={this.state.totalFailures} />\n      </div>\n       <div>\n        <form>\n           <div className=\"stats-input-container form-group\">\n             <input\n               type=\"text\"\n               className=\"stats-input form-control\"\n               placeholder=\"Player address\"\n               onChange={async(evt) => {\n                 evt.preventDefault();\n                 await this.updatePlayerStats(evt.target.value);\n               }}\n               onKeyDown={async(evt) => {\n                if(evt.key === \"Enter\") evt.preventDefault();\n               }}\n             />\n           </div>\n        </form>\n\n        <div className=\"stats-content\">\n          <StatisticPanel show={this.state.solvedLevels.length} title=\"Levels Completed\">\n            <div className=\"player-stats-results\">\n                {\n                  this.state.solvedLevels.map(\n                    (level) => (\n                      <div key={level.name}>\n                        <span>{level.name}</span>\n                        <span>{level.difficultyCircles}</span>\n                      </div>\n                    )\n                  )\n                }\n            </div>\n          </StatisticPanel>\n        </div>\n       </div>\n       {/* footer */}\n       <Footer></Footer>\n     </div> \n\n}}\n\nfunction mapStateToProps(state) {\n  return {\n    web3: state.network.web3,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    collectStats: actions.collectStats\n  }, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Stats)"],"sourceRoot":""}