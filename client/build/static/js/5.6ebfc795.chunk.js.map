{"version":3,"sources":["utils/textloader.js","components/common/Markdown.js","containers/Help.js"],"names":["load","data","Promise","resolve","reject","fetch","then","response","text","error","console","log","Markdown","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","target","undefined","source","_createClass","key","value","_componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","this","_isMounted","loadContents","props","stop","apply","arguments","_componentDidUpdate","_callee2","_context2","_loadContents","_callee3","targetText","_context3","abrupt","default","test","loadText","t0","sent","setState","t1","_x","children","_jsx","ReactMarkdown","React","Component","Help","language","localStorage","getItem","strings","loadTranslations","_jsxs","className","MarkdownComponent","setupMetamask","gameMechanics","usingConsole","beyondConsole","troubleshooting","Footer","connect","lang","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/5.6ebfc795.chunk.js","sourcesContent":["export default function load(data) {\n  return new Promise((resolve, reject) => {\n    // console.log(`loading file:`, data, __dirname)\n    try {\n      fetch(data)\n        .then(response => response.text())\n        .then(text => {\n          // console.log(`file loaded`)\n          resolve(text)\n        })\n    }\n    catch(error) {\n      console.log(`ERROR LOADING FILE:`, error)\n      reject(error)\n    }\n  })\n}","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport loadText from '../../utils/textloader'\n\nclass Markdown extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      target: undefined,\n      source: undefined\n    }\n  }\n\n  async componentDidMount() {\n    this._isMounted = true\n    await this.loadContents(this.props.target)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n    \n  }\n\n  async componentDidUpdate() {\n    await this.loadContents(this.props.target);\n  }\n\n  async loadContents(target) {\n    if(!this._isMounted) return\n    let targetText = typeof target == 'string' ? target : target.default;\n    if(this.state.target === targetText) return\n    try {\n      const text = /md?$/.test(targetText) ?  await loadText(targetText) : targetText;\n      this.setState({ target: targetText, source: text })\n    } catch(error) {\n      this.setState({source: undefined})\n    }\n  }\n\n  render() {\n    const children = this.state.source;\n    return <div>{ children && <ReactMarkdown children={children}/> }</div>\n  }\n}\n\nexport default Markdown\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport MarkdownComponent from \"../components/common/Markdown\";\nimport { loadTranslations } from \"../utils/translations\";\nimport Footer from \"../components/common/Footer\";\n\nclass Help extends React.Component {\n  render() {\n    let language = localStorage.getItem(\"lang\");\n    let strings = loadTranslations(language);\n\n    return (\n      <div className=\"helpcontainer\">\n        <div className=\"lines\"></div>\n        <main className=\"boxes\">\n          <h3>Setup Metamask</h3>\n          <section>\n            <MarkdownComponent target={strings.setupMetamask} />\n          </section>\n\n          <h3>Game Mechanics</h3>\n          <section>\n            <MarkdownComponent target={strings.gameMechanics} />\n          </section>\n\n          <h3>Using the console</h3>\n          <section>\n            <MarkdownComponent target={strings.usingConsole} />\n          </section>\n\n          <h3>Beyond the console</h3>\n          <section>\n            <MarkdownComponent target={strings.beyondConsole} />\n          </section>\n\n          <h3>Troubleshooting</h3>\n          <section>\n            <MarkdownComponent target={strings.troubleshooting} />\n          </section>\n        </main>\n        {/* Footer */}\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    language: state.lang,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);\n"],"sourceRoot":""}