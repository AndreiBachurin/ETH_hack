{"version":3,"sources":["../../node_modules/is-buffer/index.js","../../node_modules/extend/index.js","../../node_modules/style-to-object/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/vfile-message/lib/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/bail/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/lib/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/character-entities/index.js","../../node_modules/decode-named-character-reference/index.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/parse.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/unist-util-is/lib/index.js","../../node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/unist-util-visit/lib/index.js","../../node_modules/unist-util-position/lib/index.js","../../node_modules/mdast-util-definitions/lib/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/unist-util-generated/lib/index.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/style-to-object/index.mjs","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/react-markdown/lib/react-markdown.js"],"names":["module","exports","obj","constructor","isBuffer","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","parse","require","StyleToObject","style","iterator","declaration","output","property","declarations","hasIterator","len","default","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","prop","val","ret","decl","decls","stringifyPosition","point","index","VFileMessage","_Error","_inherits","_super","_createSuper","place","origin","_this","_classCallCheck","parts","undefined","indexOf","message","stack","fatal","ruleId","file","actual","expected","url","note","_createClass","_wrapNativeSuper","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","_key","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","bufferLike","buffer","data","messages","history","stored","map","_toConsumableArray","includes","get","set","assertNonEmpty","assertPart","stem","encoding","part","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","fn","_len2","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","apply","Promise","then","_len4","_key4","concat","wrap","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","_toArray","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","_value","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","d","combined","_combined$key","_combined$key2","remarkParse","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","definitions","augment","hName","hProperties","hChildren","ctx","props","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","remarkRehype","bridge","mutate","Schema","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","types","DefinedInfo","_Info","mask","mark","_assertThisInitialized","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","thing","valid","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","React","Fragment","ReactIs","isValidElementType","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","commas","_unused","v","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","func","arrayOf","bool","oneOfType","any"],"mappings":"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","file":"static/js/0.ed235eca.chunk.js","sourcesContent":["/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"sourceRoot":""}