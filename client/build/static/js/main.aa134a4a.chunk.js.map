{"version":3,"sources":["gamedata sync /^/.//.*//strings/.json$","gamedata sync /^/.//deploy/..*/.json$","../../node_modules/client/src/gamedata sync /^/.//deploy/..*/.json$","../public/imgs sync /^/.//Level.*/.webm$","../public/imgs/Level1.webm","../public/imgs/Level2.webm","../public/imgs/Level3.webm","../public/imgs/Level4.webm","../public/imgs sync /^/.//Level.*/.png$","reducers/networkReducer.js","reducers/gamedataReducer.js","reducers/playerReducer.js","reducers/contractsReducer.js","reducers/statsReducer.js","reducers/languageReducer.js","reducers/index.js","middlewares/loadEthernautContract.js","middlewares/loadGamedata.js","middlewares/loadLevelInstance.js","middlewares/submitLevelInstance.js","middlewares/collectStats.js","middlewares/activateLevel.js","middlewares/setPlayerAddress.js","middlewares/syncPlayerProgress.js","middlewares/registerPlayer.js","middlewares/setLanguage.js","store.js","utils/^^.js","containers/Mosaic.js","containers/App.js","components/not-found/NotFound404.js","components/leaderboard/LeaderIcon.js","containers/Header.js","components/utils/Toast.js","components/utils/Tooltip.js","components/leaderboard/LeaderTile.js","components/leaderboard/checkIfAliasExist.js","components/leaderboard/Hubspot.js","components/leaderboard/AliasModal.js","components/leaderboard/LeaderList.js","components/leaderboard/Headers.js","components/leaderboard/Search.js","containers/Leaderboard.js","index.js","middlewares/setNetwork.js","utils/svg.js","components/common/Footer.js","actions/index.js","constants.js","utils/getlevelsdata.js","hoc/withRouter.js","utils/statsContract.js","utils/ethutil.js","../../node_modules/contracts/build/contracts/levels sync /^/.//.*/.json$","utils/github.js","utils/contractutil.js","../../deps/hljs/lib/index.js","utils/translations.js","utils/deploycontract.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","initialState","web3","undefined","gasPrice","blockNum","networkId","networkReducer","state","arguments","length","action","type","actions","_objectSpread","ethernautAddress","activeLevel","levels","gameDataReducer","address","completedLevels","emittedLevels","nickname","telegram","playerReducer","_action$instance","newState","allLevelsCompleted","allCompleted","key","constants","JSON","parse","window","localStorage","getItem","restorePlayer","_defineProperty","level","deployedAddress","instance","reset","cachePlayer","completed","data","setItem","stringify","ethernaut","nonce","contractsReducer","contract","createdInstanceLogs","completedLevelLogs","statsReducer","lang","languageReducer","reducer","combineReducers","routing","routerReducer","network","gamedata","gamedataReducer","player","contracts","stats","language","strings","loadTranslations","loadEthernautContract","store","next","getState","ethutil","EthernautABI","from","at","then","console","info","concat","ethernautAddressMessage","dispatch","catch","err","log","error","ethernautNotFoundMessage","loadGameData","network_id","require","deployData","getDeployData","levelsIn","levelsOut","i","deployId","idx","push","alert","noLevelsDataMessage","loadLevelInstance","instanceAddress","noPlayerAddressMessage","reuse","cache","asyncInfo","requestingNewInstanceMessage","showErr","unableToRetrieveLevelMessage","estimate","parseInt","instanceGas","deployFunds","utils","toWei","parseFloat","toString","getGasFeeDetails","gasFeeDetails","createLevelInstance","gas","value","tx","logs","event","args","setTimeout","verifyContract","transactionNoLogsMessage","instanceAddressMessage","instanceContract","split","submitLevelInstance","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","abrupt","submitLevelMessage","sent","submitLevelInstanceUtil","victory","wellDoneMessage","completedLevelMessage","uncompletedLevelMessage","stop","_x","apply","_x2","_x3","_x4","_x5","_x6","_submitLevelInstanceUtil","_callee2","levelAddress","ethLevelAddress","ethPlayer","_context2","t0","queuedAction","activateLevel","onPredeployedNetwork","isLocalDeployed","getLevelKey","_","find","clear","greet","name","secret","typeHelpMessage","chrome","webstore","quiet","slowNetworkMessage","notContractSetMessage","levelAddressMessage","setPlayerAddress","document","location","replace","origin","pathname","playerAddressMessage","balance","warn","noEthersMessage","syncPlayerProgress","levelsSolved","levelAddresses","_iterator","_step","checkIfPlayerExist","getLevelsSolvedByPlayer","_createForOfIteratorHelper","s","n","done","f","collectStats","query","filter","range","fromBlock","toBlock","LevelInstanceCreatedLog","result","LevelCompletedLog","registerPlayer","_registerPlayer","_callee3","_context3","Promise","_ref2","register","_x7","setLanguage","history","createBrowserHistory","middlewares","loadGamedata","setNetwork","thunkMiddleware","routerMiddleware","splice","createLogger","collapsed","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","CUSTOM_LOGGING","logger","assign","defaultConsole","processArgs","arg","isString","indexOf","RegExp","randGoodIcon","ICONS_BAD","randInt","padZero","str","len","Array","join","slice","DEBUG","dir","_len","_key","_len2","_key2","_len3","_key3","pleaseWait","_len4","_key4","msg1","msg2","c","rainbow","createRainbow","interval","setInterval","rawColor","color","rgbaString","Math","floor","clearInterval","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","mineInfo","text","txId","hash","charCodeAt","hashString","substr","stringToColor","negColor","hex","r","g","b","invertColor","eth","net","getId","res","networkObject","network_name","ID_TO_NETWORK","networks","values","NETWORKS_INGAME","blockExplorer","interceptConsole","getBalance","getBlockNumber","sendTransaction","getNetworkId","fromWei","version","VERSION","help","table","helperPlayer","helperEthernaut","helperLevel","helperContract","helperInstance","helperVersion","helperGetBalance","helperGetBlockNumber","helperSendTransaction","helperGetNetworkId","helperToWei","helperFromWei","helperDeployAllContracts","ICONS_GOOD","min","max","random","Mosaic","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_createClass","_this2","_getlevelsdata","getlevelsdata","this","levelData","_slicedToArray","_jsx","className","children","Link","to","_jsxs","autoPlay","playsInline","preload","loop","muted","src","difficulty","React","Component","connect","bindActionCreators","App","handleNameChange","bind","_assertThisInitialized","handleTGChange","ReactGA","initialize","pageview","prevProps","childrenElement","parentElement","scrollTop","target","navigate","setState","supportedNetworks","_switchToMumbai","elements","deployWindow","querySelectorAll","ethereum","request","method","params","chainId","Number","MUMBAI","style","display","t1","href","alt","onClick","navigateToFirstIncompleteLevel","playNow","marginTop","width","onChange","placeholder","evt","deployMessageTitle","deployMessage","switchToMumbai","Footer","withRouter","NotFound404","LeaderIcon","xmlns","viewBox","d","Header","handleClickOutside","closeDropdown","dark","activeDropdown","multiDDOpen","tabIndex","tabdcurrentTabIndex","getElementsByClassName","element","svgFilter","theEthernaut","getElementById","isArrowInPage","imageElements","preventDefault","setLang","_changeNetwork","chainName","rpcUrls","rpcUrl","nativeCurrency","currencyName","symbol","currencySymbol","decimals","blockExplorerUrls","LANGUAGES_MAP","en","english","ru","russian","ddOpen","Boolean","stopPropagation","toggleDropdownState","_Fragment","getDDClassName","index","changeNetwork","setActiveTab","Languages","languageString","changeLanguage","ProgressBar","height","borderColor","getComputedStyle","documentElement","getPropertyValue","barColor","ariaLabel","wrapperStyle","wrapperClass","visible","backgroundColor","border","warning","warningMessage","onClickOutside","position","left","transform","padding","top","borderRadius","fontSize","useToast","time","_useState","useState","_useState2","message","setMessage","_useState3","_useState4","currentPos","setCurrentPos","currentStyle","transition","Toast","toast","newMessage","Tooltip","content","isVisible","setIsVisible","bottom","visibility","onMouseLeave","onMouseEnter","LeaderTile","rank","leader","onAliasEdit","currentUser","_useToast","score","totalNumberOfLevelsCompleted","alias","navigator","clipboard","writeText","toFixed","toLowerCase","getAliases","response","axios","get","ALIAS_PATH","aliases","Filter","HubspotForm","onFormReady","form","spans","legends","buttons","inputs","emailElement","usernameElement","label","addressInput","ethernautAddressLabel","checkboxLabel","styles","textColor","bgColor","opacity","cursor","pointerEvents","lastValue","Event","bubbles","simulated","tracker","_valueTracker","setValue","dispatchEvent","setNativeValue","addEventListener","srcElement","email","isProfane","includes","checkIfAliasIsPresent","onFormSubmitted","remove","outerElement","querySelector","createElement","innerHTML","insertAdjacentElement","formRef","createRef","hbspt","forms","create","submitButtonClass","onFormSubmit","ref","WithToast","AliasModal","show","onClose","modalEl","useRef","useEffect","handler","current","contains","removeEventListener","portalId","formId","region","LeaderList","players","setShow","setCurrentUser","showEditModal","Headers","Search","keyword","onKeywordChange","fetchAliases","reactPaginateProps","pageRangeDisplayed","renderOnZeroPageCount","breakLabel","nextLabel","previousLabel","containerClassName","pageLinkClassName","activeLinkClassName","nextLinkClassName","previousLinkClassName","assignRank","item","assignAlias","isScoreNonZero","capitaliseFirstLetter","string","charAt","toUpperCase","Leaderboard","offset","setOffset","playersWithRank","setPlayersWithRank","_useState5","_useState6","searchResult","setSearchResult","_useState7","_useState8","searchKeyword","setSearchKeyword","_useState9","_useState10","currentNetworkName","setCurrentNetworkName","pageCount","ceil","endOffset","currentItems","handleNetworkChange","useCallback","networkName","getNetworkNamefromId","initateCurrentlySelectedChain","on","removeListener","fetchAndUpdate","_callee4","leaderboardNetworkName","_playersWithRank","_context4","getLeaderboardNetworkNameFromNetworkName","getLeaderboardPath","entries","NETWORKS","_network$","isKeywordMatching","ReactPaginate","onPageChange","newOffset","selected","nonlazy","component","lazy","Level","Help","Stats","Sentry","dsn","debug","tunnel","integrations","Integrations","BrowserTracing","tracesSampleRate","release","container","root","createRoot","render","Provider","Router","syncHistoryWithStore","Suspense","fallback","Routes","Route","path","exact","getAccounts","accounts","acct","price","num","allNetworkIds","LOCAL","localdeploy","deployAdminContracts","deployAllContracts","deployRemainingContracts","hasBeenLocalDeployed","deploymentStatus","contractsDeploymentStatus","deployStatus","ALL_DEPLOYED","dangerouslySetInnerHTML","__html","submitGameFooter","raiseIssue","CORE_DEPLOYED","submitLevelFooter","footer","CONNECT_WEB3","connectWeb3","SET_GAS_PRICE","setGasPrice","SET_NETWORK_ID","setNetworkId","SET_PLAYER_ADDRESS","LOAD_GAME_DATA","LOAD_ETHERNAUT_CONTRACT","ACTIVATE_LEVEL","DEACTIVATE_LEVEL","deactivateLevel","LOAD_LEVEL_INSTANCE","SUBMIT_LEVEL_INSTANCE","SYNC_PLAYER_PROGRESS","COLLECT_STATS","SET_BLOCK_NUM","setBlockNum","SET_LANG","CHECK_ALL_COMPLETED","REGISTER","dotenv","config","process","DEBUG_REDUX","SENTRY_DSN","REACT_APP_SENTRY_DSN","UNDEFINED","url","port","MUMBAI_HOST","privKey","PRIV_KEY","explorer","apiKey","REACT_APP_MUMBAI_EXPLORER_API_KEY","apiHost","Web3","pkgWeb3","CLEAR_CONSOLE","GOOGLE_ANALYTICS_ID","ADDRESSES","_ADDRESSES","SUPPORTS_EIP_1559","CORE_CONTRACT_NAMES","STORAGE_PLAYER_DATA_KEY","STORAGE_CONTRACT_DATA_KEY","PATH_ROOT","PATH_NOT_FOUND","PATH_HELP","PATH_LEVEL_ROOT","PATH_LEVEL","PATH_STATS","PATH_LEADERBOARD","SHOW_ALL_COMPLETE_DESCRIPTIONS","SHOW_VERSION","ACTIVE_NETWORK","id_to_network","forEach","getLevelDetailsByAddress","allLevels","restoreContract","currentLevel","fromEntries","a","reverse","difficultyCircles","drawDifficultyCircle","levelDifficulty","numberOfFullCircles","numberOfEmptyCircles","j","k","source","levelComplete","selectedIndex","linkStyle","_props$player","isMissingSVGImage","isMissingPNGImage","_props$params","textDecoration","object","creationDate","created","useNavigate","useParams","useLocation","playerAddress","proxyStatsAddress","statsContract","listOfLevelsSolved","levelDetails","getLevelAddressesInNetwork","getProxyStatsContractAddressInNetwork","getStatsContract","getListOfLevelsSolvedByPlayer","oneLevel","getTotalPlayers","_ref3","getTotalNumberOfPlayers","getTotalFailures","_ref4","getFailedSubmissions","getTotalCompleted","_ref5","_callee5","_context5","getCompletedLevels","getTotalCreated","_ref6","_callee6","_context6","getLevelsCreated","_x8","_ref7","_callee7","_context7","doesPlayerExist","_x9","_x10","_ref9","_callee9","_context9","getTotalNoOfPlayers","_x13","_ref10","_callee10","_context10","getTotalNoOfFailedSubmissions","_x14","_ref11","_callee11","_context11","getTotalNoOfLevelInstancesCompleted","_x15","_ref12","_callee12","_context12","getTotalNoOfLevelInstancesCreated","_x16","_ref13","_callee13","noOfQueriesAtAtime","isLevelSolvedRequestsList","isLevelSolvedRequestsListChunked","isLevelSolvedList","_context13","getIsLevelSolvedRequestsList","chunk","all","_toConsumableArray","getListOfSolvedLevels","_x17","_x18","_x19","_x20","isSolved","list","chunkSize","listOfIsLevelSolvedRequests","_i","_levelNos","levelNo","isLevelSolvedByPlayer","_ref14","_callee14","_context14","isLevelCompleted","_x21","_x22","_x23","deployedNetworkData","_i2","_keys","isNaN","_ref15","_callee15","statsABI","statsContractInstance","_context15","getTruffleContract","_x24","_x25","duplicateTransactions","Map","setWeb3","_web3","getWeb3","jsonABI","defaults","truffleContract","TruffleContract","setProvider","currentProvider","reject","blockNumber","options","netId","ether","wei","watchAccountChanges","callback","lastKnownAccount","newAccount","watchNetwork","callbacks","getGasPrice","validateAddress","substring","test","raw","allLowerCase","allUppercase","ethjs","end","cb","size","transactionHash","set","attachLogger","_rpcEngine","_middleware","unshift","providers","multiplier","maxPriorityFeePerGas","block","blockBaseFee","getBlock","baseFeePerGas","maxFeePerGas","getNetworkFromId","_networkObjectsList","newGithubIssueUrl","repoUrl","user","repo","URL","_types","isArray","TypeError","searchParams","cacheContract","updateCachedContract","getInjectedProvider","web3Instance","every","contractName","isAddress","fetchLevelABI","levelContract","transferOwnerShip","newOwnerAddress","getChainId","loadContracts","template","title","open","focus","DEFAULT","_step2","_iterator2","_iterator3","_step3","_iterator4","_step4","finish","deployAndRegisterLevel","t2","contractAddress","contractFile","contractCode","headers","urlencoded","requestOptions","verificationDetails","fetch","append","URLSearchParams","compilerVersion","optimization","runs","constructorArguements","licenseTypeId","body","json","status","hljs","hljsDefineSolidity","translations","colors","cyan","deploySingleContract","_deploySingleContract","contractABI","gasDetails","_ref$deployParams","deployParams","Contract","_args","new","confirmMainnetDeployment","confirm","confirmMainnetDeploy","_deployAndRegisterLevel","levelABI","levelContractAddress","factoryAddress","LocalFactory","localFactory","LocalFactoryABI","registerLevel","_deployAdminContracts","gameData","factoryContracts","deployedCoreContracts","coreContractName","factory","owner"],"mappings":"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","file":"static/js/main.aa134a4a.chunk.js","sourcesContent":["var map = {\n\t\"./en/strings.json\": 335,\n\t\"./ru/strings.json\": 543\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1085;","var map = {\n\t\"./deploy.local.json\": 336,\n\t\"./deploy.mumbai-polygon.json\": 337\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1114;","var map = {\n\t\"./deploy.local.json\": 336,\n\t\"./deploy.mumbai-polygon.json\": 337\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1115;","var map = {\n\t\"./Level1.webm\": 1117,\n\t\"./Level2.webm\": 1118,\n\t\"./Level3.webm\": 1119,\n\t\"./Level4.webm\": 1120\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1116;","export default __webpack_public_path__ + \"static/media/Level1.4a86b00a.webm\";","export default __webpack_public_path__ + \"static/media/Level2.29e42940.webm\";","export default __webpack_public_path__ + \"static/media/Level3.44cc03b2.webm\";","export default __webpack_public_path__ + \"static/media/Level4.b275241e.webm\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1121;","import * as actions from '../actions';\n\nconst initialState = {\n  web3: undefined,\n  gasPrice: 20000000,\n  blockNum: undefined,\n  networkId: undefined\n}\n\nconst networkReducer = function(state = initialState, action) {\n  switch(action.type) {\n    case actions.CONNECT_WEB3:\n      return { ...state, web3: action.web3 }\n\n    case actions.SET_GAS_PRICE:\n      return { ...state, gasPrice: action.gasPrice }\n\n    case actions.SET_NETWORK_ID:\n      return { ...state, networkId: action.id }\n\n    case actions.SET_BLOCK_NUM:\n      return { ...state, blockNum: action.blockNum }\n\n    default:\n      return state;\n  }\n}\n\nexport default networkReducer","import * as actions from '../actions';\n\nconst initialState = {\n  ethernautAddress: undefined,\n  activeLevel: undefined,\n  levels: []\n}\n\nconst gameDataReducer = function(state = initialState, action) {\n  switch(action.type) {\n\n    case actions.LOAD_GAME_DATA:\n      return {\n        ...state,\n        levels: action.levels,\n        ethernautAddress: action.ethernautAddress\n      }\n\n    case actions.ACTIVATE_LEVEL:\n      return {\n        ...state,\n        activeLevel: action.activeLevel\n      }\n\n    case actions.DEACTIVATE_LEVEL:\n      return {\n        ...state,\n        activeLevel: undefined\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default gameDataReducer","import * as actions from '../actions';\nimport * as constants from '../constants';\n\nconst initialState = {\n  address: undefined,\n  completedLevels: {},\n  emittedLevels: {},\n  nickname: \"\",\n  telegram: \"\"\n}\n\nconst playerReducer = function(state = initialState, action) {\n  let newState;\n  switch(action.type) {\n\n    case actions.CHECK_ALL_COMPLETED:\n      newState = {\n        ...state,\n        allLevelsCompleted: action.allCompleted\n      }\n      break\n\n    case actions.SET_PLAYER_ADDRESS:\n      newState = restorePlayer(action.address) || { ...state, address: action.address }\n      break\n\n    case actions.LOAD_LEVEL_INSTANCE:\n      newState = {\n        ...state,\n        emittedLevels: {\n          ...state.emittedLevels,\n          [action.level.deployedAddress]: action.instance?.address\n        }\n      }\n      if (action.reset) newState = {\n        ...newState,\n        completedLevels: {\n          ...state.completedLevels,\n          [action.level.deployedAddress]: false,\n        }\n      }\n      cachePlayer(newState)\n      break\n\n    case actions.SUBMIT_LEVEL_INSTANCE:\n      if(action.completed) {\n        newState = {\n          ...state,\n          completedLevels: {\n            ...state.completedLevels,\n            [action.level.deployedAddress]: action.completed\n          }\n        }\n        cachePlayer(newState)\n      }\n      else newState = state\n      break\n\n      case actions.REGISTER:\n        newState = {\n          ...state,\n          nickname: action.nickname,\n          telegram: action.telegram\n        }\n        cachePlayer(newState)\n        break  \n    \n    case actions.SYNC_PLAYER_PROGRESS:\n      newState = {\n        ...state,\n        completedLevels: action.completedLevels || {}\n      }\n      break\n\n    default:\n      newState = state;\n  }\n  return newState\n}\n\n\nexport default playerReducer\n\nfunction cachePlayer(data) {\n  if(data.address) {\n    const key = constants.STORAGE_PLAYER_DATA_KEY + data.address\n    // console.log(`CACHE PLAYER`, key, data)\n    window.localStorage.setItem(key, JSON.stringify(data))\n  }\n}\n\nfunction restorePlayer(address) {\n  const key = constants.STORAGE_PLAYER_DATA_KEY + address\n  const data = JSON.parse(window.localStorage.getItem(key))\n  //  console.log(`RESTORE PLAYER`, key, data)\n  return data\n}","import * as actions from '../actions';\n\nconst initialState = {\n  ethernaut: undefined,\n  levels: {},\n  nonce: 0\n}\n\nconst contractsReducer = function(state = initialState, action) {\n  switch(action.type) {\n\n    case actions.LOAD_ETHERNAUT_CONTRACT:\n      return {\n        ...state,\n        ethernaut: action.contract\n      };\n\n    case actions.LOAD_LEVEL_INSTANCE:\n      return {\n        ...state,\n        levels: {\n          ...state,\n          [action.level.deployedAddress]: action.instance\n        },\n        nonce: state.nonce + 1\n      }\n\n    case actions.SUBMIT_LEVEL_INSTANCE:\n      if(action.completed) {\n        return {\n          ...state,\n          levels: {\n            ...state,\n            [action.level.deployedAddress]: undefined\n          },\n          nonce: state.nonce + 1\n        }\n      }\n      else return state\n\n    default:\n      return state\n  }\n}\n\nexport default contractsReducer","import * as actions from '../actions';\n\nconst initialState = {\n  createdInstanceLogs: [],\n  completedLevelLogs: []\n}\n\nconst statsReducer = function(state = initialState, action) {\n  let newState = { ...state }\n  switch(action.type) {\n\n    case actions.COLLECT_STATS:\n      if(action.createdInstanceLogs) {\n        newState.createdInstanceLogs = action.createdInstanceLogs\n      }\n      if(action.completedLevelLogs) {\n        newState.completedLevelLogs = action.completedLevelLogs\n      }\n      break\n\n    default:\n      break\n  }\n  return newState;\n}\n\nexport default statsReducer","import * as actions from '../actions'\n\nconst initialState = {\n    lang: 'en'\n}\n\nconst languageReducer = function(state = initialState, action) {\n  switch(action.type) {\n\n    case actions.SET_LANG:\n      return { ...state, lang: action.lang }\n\n    default:\n      return state;\n  }\n} \n\nexport default languageReducer","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux'\nimport networkReducer from './networkReducer'\nimport gamedataReducer from './gamedataReducer'\nimport playerReducer from './playerReducer'\nimport contractsReducer from './contractsReducer'\nimport statsReducer from './statsReducer'\nimport languageReducer from './languageReducer'\n\nconst reducer = combineReducers({\n  routing: routerReducer,\n  network: networkReducer,\n  gamedata: gamedataReducer,\n  player: playerReducer,\n  contracts: contractsReducer,\n  stats: statsReducer,\n  lang: languageReducer,\n});\n\nexport default reducer;","import * as ethutil from '../utils/ethutil'\nimport EthernautABI from 'contracts/build/contracts/Ethernaut.sol/Ethernaut.json'\nimport * as actions from '../actions';\nimport { loadTranslations } from '../utils/translations'\n\nlet language = localStorage.getItem('lang')\nlet strings = loadTranslations(language)\n\nconst loadEthernautContract = store => next => action => {\n  if (action.type !== actions.LOAD_ETHERNAUT_CONTRACT) return next(action)\n  if (action.contract !== undefined) return next(action)\n\n  const state = store.getState()\n  if (\n    !state.network.web3 ||\n    !state.player.address ||\n    !state.gamedata.ethernautAddress\n  ) {\n    // console.log(`UNABLE TO LOAD ETHERNAUT`)\n    return next(action)\n  }\n  // console.log(`GETTING ETHERNAUT...`, state.gamedata.ethernautAddress)\n\n  // Get contract template\n  const Ethernaut = ethutil.getTruffleContract(\n    EthernautABI,\n    {\n      from: state.player.address,\n      gasPrice: state.network.gasPrice\n    }\n  )\n\n  // Get deployed instance\n  Ethernaut.at(state.gamedata.ethernautAddress)\n    .then(instance => {\n\n      console.info(`=> ${strings.ethernautAddressMessage}\\n${instance.address}`)\n\n      // for player interaction via the browser's console\n      window.ethernaut = instance\n\n      action.contract = instance\n      \n      next(action)\n\n      // Get game data\n      store.dispatch(actions.syncPlayerProgress())\n\n      // Auto-restore previoius instance\n      if (state.gamedata.activeLevel)\n        store.dispatch(actions.loadLevelInstance(state.gamedata.activeLevel, true, false))\n\n    })\n    .catch((err) => {\n      console.log({ err })\n      console.error(`@bad ${strings.ethernautNotFoundMessage}`)\n    })\n}\n\nexport default loadEthernautContract","import * as actions from '../actions';\nimport { loadTranslations } from '../utils/translations'\nimport { getDeployData } from '../utils/deploycontract'\n// import { store, history } from \"./../store\";\nlet language = localStorage.getItem('lang')\nlet strings = loadTranslations(language)\n\nconst loadGameData = store => next => action => {\n  if (action.type !== actions.LOAD_GAME_DATA) return next(action)\n\n  try {\n    const network_id = store.getState().network.networkId\n    if (network_id) {\n      const data = require(`../gamedata/gamedata.json`)\n      const deployData = getDeployData(network_id);\n      const levelsIn = data.levels;\n      const levelsOut = [];\n      for (let i = 0; i < levelsIn.length; i++) {\n        const level = levelsIn[i];\n        level.deployedAddress = deployData[level.deployId]\n        level.idx = i;\n        levelsOut.push(level);\n      }\n      action.ethernautAddress = deployData.ethernaut\n      action.levels = levelsOut;\n    } else {\n      const data = require(`../gamedata/gamedata.json`);\n      const levelsIn = data.levels;\n      const levelsOut = [];\n      for (let i = 0; i < levelsIn.length; i++) {\n        const level = levelsIn[i];\n        level.idx = i;\n        levelsOut.push(level);\n      }\n      action.levels = levelsOut;\n      // console.log(\"Network ID is not set until now!\")\n    }\n    // Load levels and add a bit of post processing...\n\n  } catch (e) {\n    window.alert(strings.noLevelsDataMessage) //need to do something here more nicer to tell user\n  }\n\n  next(action)\n}\n\nexport default loadGameData\n","import * as ethutil from '../utils/ethutil';\nimport * as actions from '../actions';\nimport { loadTranslations } from '../utils/translations';\nimport { getGasFeeDetails } from '../utils/ethutil'\nimport { verifyContract } from '../utils/contractutil';\n\nlet language = localStorage.getItem('lang');\nlet strings = loadTranslations(language);\n\nconst loadLevelInstance = (store) => (next) => (action) => {\n  if (action.type !== actions.LOAD_LEVEL_INSTANCE) return next(action);\n\n  const state = store.getState();\n  if (!state.network.web3 || !state.contracts.ethernaut) {\n    console.error(`@bad ${strings.ethernautNotFoundMessage}`);\n    return next(action);\n  } else if (!state.player.address) {\n    console.error(`@bad ${strings.noPlayerAddressMessage}`);\n    return next(action);\n  }\n\n  // Recover old instance address from local cache?\n  let instanceAddress;\n\n  if (action.instanceAddress) instanceAddress = action.instanceAddress;\n  else if (action.reuse) {\n    const cache = state.player.emittedLevels[action.level.deployedAddress];\n    if (cache) instanceAddress = cache;\n  }\n\n  // Get a new instance address\n  if (!instanceAddress && !action.reuse) {\n    console.asyncInfo(`@good ${strings.requestingNewInstanceMessage}`);\n\n    const showErr = function (error) {\n      console.error(\n        `@bad ${strings.unableToRetrieveLevelMessage}`,\n        error || ''\n      );\n    };\n\n    const estimate = parseInt(action.level.instanceGas, 10) || 2000000;\n    const deployFunds = state.network.web3.utils.toWei(\n      parseFloat(action.level.deployFunds, 10).toString(),\n      'ether'\n    );\n    getGasFeeDetails(state.network, 2).then(gasFeeDetails => {\n      state.contracts.ethernaut\n        .createLevelInstance(action.level.deployedAddress, {\n          // 2.5 * estimate is required for level creation to succeed in arbitrum goerli\n          gas: 2.5 * estimate.toString(),\n          ...gasFeeDetails,\n          from: state.player.address,\n          value: deployFunds,\n        })\n        .then((tx) => {\n          for (var i = 0; i < tx.logs.length; i++) {\n            if (tx.logs[i].event === \"LevelInstanceCreatedLog\") {\n              instanceAddress = tx.logs[i].args.instance;\n              action.instanceAddress = instanceAddress;\n              store.dispatch(action);\n            }\n          }\n          if (!instanceAddress) {\n            showErr(strings.transactionNoLogsMessage)\n          } else {\n            // Wait for the contract to index in the explorer\n            setTimeout(() => {\n              verifyContract(instanceAddress, action.level, state.network.networkId);\n            }, 30000);\n          }\n        }).catch((error) => {\n          showErr(error)\n        });\n    })\n  }\n\n  // Get instance from address\n  if (!instanceAddress) return;\n  console.info(`=> ${strings.instanceAddressMessage}\\n${instanceAddress}`);\n  const Instance = ethutil.getTruffleContract(\n    require(`contracts/build/contracts/levels/${action.level.instanceContract\n      }/${withoutExtension(action.level.instanceContract)}.json`),\n    {\n      from: state.player.address,\n      gasPrice: 2 * state.network.gasPrice,\n    }\n  );\n  Instance.at(instanceAddress)\n    .then((instance) => {\n      window.instance = instance.address;\n      window.contract = instance;\n      action.instance = instance;\n      next(action);\n    })\n    .catch((err) => {\n      console.log(`waiting`);\n      setTimeout(() => {\n        store.dispatch(action);\n      }, 1000);\n    });\n};\n\nexport default loadLevelInstance;\n\n// ----------------------------------\n// Utils\n// ----------------------------------\n\nfunction withoutExtension(str) {\n  return str.split('.')[0];\n}\n","import * as actions from '../actions';\nimport { loadTranslations } from '../utils/translations'\nimport { getGasFeeDetails } from '../utils/ethutil'\n//import { getPercentageOfLevelsSolvedByPlayer } from '../utils/statsContract'\n\nlet language = localStorage.getItem('lang')\nlet strings = loadTranslations(language)\n\nconst submitLevelInstance = store => next => async action => {\n  if (action.type !== actions.SUBMIT_LEVEL_INSTANCE) return next(action)\n  if (action.completed) return next(action)\n\n  const state = store.getState()\n  if (\n    !state.network.web3 ||\n    !state.contracts.ethernaut ||\n    !state.contracts.levels[action.level.deployedAddress] ||\n    !state.player.address ||\n    !state.network.gasPrice\n  ) return next(action)\n\n  console.asyncInfo(`@good ${strings.submitLevelMessage}`)\n  const gasFeeDetails = await getGasFeeDetails(state.network, 2)\n  let completed = await submitLevelInstanceUtil(\n    state.contracts.ethernaut,\n    action.level.deployedAddress,\n    state.contracts.levels[action.level.deployedAddress].address,\n    state.player.address,\n    gasFeeDetails\n  )\n  if (completed) {\n    console.victory(`@good ${strings.wellDoneMessage}, ${strings.completedLevelMessage}`);\n    // const percentage = await getPercentageOfLevelsSolvedByPlayer(state.player.address, state.network.networkId);\n    // if(percentage) {\n    //   if( Number(percentage) < 51 && Number(percentage) >= 49) {\n    //     console.info(`${strings.FifthyPercentMessage}`)\n    //   } else if ( Number(percentage) < 76 && Number(percentage) > 74) {\n    //     console.info(`${strings.SeventyFivePercentMessage}`)\n    //   } else if ( Number(percentage) < 91 && Number(percentage) > 89) {\n    //     console.info(`${strings.NinetyPercentMessage}`)\n    //   } else if ( Number(percentage) > 99 ) {\n    //     console.info(`${strings.HundredPercentMessage}`)\n    //   }\n    // }\n  }\n  else {\n    console.error(`@bad ${strings.uncompletedLevelMessage} @bad`)\n  }\n\n  action.completed = completed\n  next(action)\n}\n\nexport default submitLevelInstance\n\nasync function submitLevelInstanceUtil(ethernaut, levelAddress, instanceAddress, player, gasFeeDetails) {\n  try {\n    const data = { from: player, ...gasFeeDetails }\n    const tx = await ethernaut.submitLevelInstance(instanceAddress, data);\n    if (tx.logs.length === 0) return false\n    else {\n      if (tx.logs.length === 0) return false\n      else {\n        const log = tx.logs[0].args;\n        const ethLevelAddress = log.level;\n        const ethPlayer = log.player;\n        if (player === ethPlayer && levelAddress === ethLevelAddress) {\n          return true\n        }\n        else return false\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    return false\n  }\n}\n","import * as actions from '../actions';\n\nlet queuedAction;\n\nconst collectStats = store => next => action => {\n  if(action.type !== actions.COLLECT_STATS) {\n    if(queuedAction && action.type === actions.LOAD_ETHERNAUT_CONTRACT && action.contract) {\n      // console.log(`RETRIGGER`)\n      next(action)\n      store.dispatch(queuedAction)\n      queuedAction = null\n      return\n    }\n    return next(action)\n  }\n\n  const state = store.getState()\n  // console.log(`TRY COLLECT_STATS >`, state.contracts.ethernaut !== undefined)\n  if(\n    !state.network.web3 ||\n    !state.contracts.ethernaut\n  ) {\n    if(!queuedAction) queuedAction = action\n    return\n  }\n\n  const query = {\n    filter: {},\n    range: {\n      fromBlock: 0,\n      toBlock: state.network.blockNum || 'latest'\n    }\n  }\n  // console.log(`query`, query)\n\n  // Get Level created\n  if(!action.createdInstanceLogs) {\n    state.contracts.ethernaut.LevelInstanceCreatedLog(query.filter, query.range).then(\n      (error, result)=> {\n        if(error) return console.log(error)\n        action.createdInstanceLogs = result\n        store.dispatch(action)\n      }\n    )\n  }\n\n  // Level completed\n  if(!action.completedLevelLogs) {\n    state.contracts.ethernaut.LevelCompletedLog(query.filter, query.range).then(\n      (error, result)=> {\n        if(error) return console.log(error)\n        action.completedLevelLogs = result\n        store.dispatch(action)\n      }\n    )\n  }\n\n  next(action)\n}\n\nexport default collectStats","import _ from 'lodash'\nimport { push } from 'react-router-redux'\nimport * as actions from '../actions';\nimport * as constants from '../constants';\n\nimport { loadTranslations } from '../utils/translations'\nimport { onPredeployedNetwork } from './setNetwork';\nimport { getLevelKey, isLocalDeployed } from '../utils/contractutil';\n\nlet language = localStorage.getItem('lang')\nlet strings = loadTranslations(language)\n\nconst activateLevel = store => next => action => {\n  if (action.type !== actions.ACTIVATE_LEVEL) return next(action)\n  const state = store.getState()\n  const network_id = state.network.networkId\n\n  if (\n    !state.gamedata.levels\n  ) return next(action)\n\n  // Deactivate previous\n  if (state.gamedata.activeLevel) {\n    store.dispatch(actions.deactivateLevel(state.gamedata.activeLevel))\n  }\n  // confirm youre not on a predeployed chain and you've deployed cores locally\n  const canDeploy = !onPredeployedNetwork(network_id) && isLocalDeployed(network_id)\n  // Find level from deployed level address\n  // -- check if the prop is a valid eth address or a number\n  // -- if it is a number then match level based on number\n  // -- make sure you can only index by id when you are on a chain you can deploy to\n  const key = canDeploy ? getLevelKey(action.address) : \"deployedAddress\"\n  let activeLevel = _.find(\n    state.gamedata.levels,\n    level => +level[key] === +action.address\n  )\n\n  // If not found, search levels by id\n  if (!activeLevel) {\n    activeLevel = _.find(\n      state.gamedata.levels,\n      level => +level[\"deployId\"] === +action.address\n    )\n  }\n  if (constants.CLEAR_CONSOLE && constants.CUSTOM_LOGGING && activeLevel) {\n    console.clear()\n  }\n  if (activeLevel) console.greet(activeLevel.name)\n  console.secret(strings.typeHelpMessage)\n  const isChrome = !!window.chrome && !!window.chrome.webstore;\n  if (isChrome) {\n    console.quiet(strings.slowNetworkMessage)\n  }\n\n  // Remove contract reference\n  window.contract = strings.notContractSetMessage\n  window.instance = undefined\n\n  // -> 404\n  if (!activeLevel && !isLocalDeployed(network_id)) {\n    store.dispatch(push(constants.PATH_NOT_FOUND))\n    return\n  }\n\n  // Auto-restore previous instance\n  if (state.contracts.ethernaut)\n    store.dispatch(actions.loadLevelInstance(activeLevel, true, false))\n\n  window.level = activeLevel.deployedAddress;\n\n  if (activeLevel.deployedAddress) {\n    console.info(`=> ${strings.levelAddressMessage}\\n${activeLevel.deployedAddress}`)\n  }\n\n  action.activeLevel = activeLevel;\n  next(action)\n}\n\nexport default activateLevel","import * as ethutil from '../utils/ethutil'\nimport * as actions from '../actions';\nimport { loadTranslations } from '../utils/translations'\n\nlet language = localStorage.getItem('lang')\nlet strings = loadTranslations(language)\n\nconst setPlayerAddress = store => next => action => {\n  if(action.type !== actions.SET_PLAYER_ADDRESS) return next(action)\n\n  const state = store.getState()\n\n  // Full reload if player existed and is changing\n  if(state.player.address) {\n    document.location.replace(`${document.location.origin}${document.location.pathname}`)\n  }\n\n  if(!action.address) {\n    console.error(`@bad ${strings.noPlayerAddressMessage}`)\n    return\n  }\n\n  window.player = action.address\n  console.info(`=> ${strings.playerAddressMessage}\\n${action.address}`)\n\n  // Warn about 0 balance\n  ethutil.getBalance(action.address)\n    .then(balance => {\n      if(balance === '0') {\n        console.warn(`@bad ${strings.noEthersMessage}`)\n      }\n    })\n\n  next(action)\n}\n\nexport default setPlayerAddress","import * as actions from '../actions';\nimport { getLevelsSolvedByPlayer, checkIfPlayerExist } from '../utils/statsContract';\n\nconst syncPlayerProgress = store => next => async action => {\n  if (action.type !== actions.SYNC_PLAYER_PROGRESS) return next(action)\n\n  const state = store.getState()\n\n  if(\n    !state.network.networkId ||\n    !state.player.address\n  ) return next(action)\n\n  const playerExist = await checkIfPlayerExist(state.player.address, state.network.networkId)\n\n  if (!playerExist) { \n    return next(action)\n  }\n\n  let levelsSolved = await getLevelsSolvedByPlayer(state.player.address, state.network.networkId)\n\n  let levelAddresses = levelsSolved.map(level => level.deployedAddress)\n\n  if (levelAddresses.length === 0) { \n    return next(action)\n  }\n  \n  let completedLevels = {}\n\n  for (let levelAddress of levelAddresses) { \n    completedLevels[levelAddress] = true;\n  }\n\n  action.completedLevels = completedLevels\n\n  return next(action)\n}\n\n\nexport default syncPlayerProgress","import * as actions from '../actions'\n\nexport default store => next => async action => {\n  if(action.type !== actions.REGISTER) return next(action)\n  if(action.completed) return next(action)\n\n  const state = store.getState()\n  if(\n    !state.network.web3 ||\n    !state.contracts.ethernaut ||\n    !action.nickname ||\n    !state.player.address ||\n    !state.network.gasPrice\n  ) return next(action)\n\n  console.asyncInfo(`@good Registering player...`)\n\n  console.log(\"action.telegram = \", action.telegram);\n\n  let completed = await registerPlayer(\n    state.contracts.ethernaut,\n    action.nickname,\n    action.telegram,\n    state.player.address,\n    state.network.gasPrice\n  )\n  if(completed) {\n    console.info(`@good Hello, ` + action.nickname +`! You have been successfully registered!`)\n  }\n  else {\n    console.error(`@bad Failed to register`)\n  }\n\n  action.completed = completed\n  next(action)\n}\n\nasync function registerPlayer(ethernaut, nickname, telegram, player, gasPrice) {\n  return new Promise(async function(resolve) {\n    const tx = await ethernaut.register(nickname, telegram);\n    if (tx) {\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n}\n","import * as actions from '../actions'\n\nconst setLanguage = store => next => action => {\n    if (action.type !== actions.SET_LANG) return next(action)\n    localStorage.setItem('lang', action.lang)\n    document.location.replace(`${document.location.origin}${document.location.pathname}`)\n    next(action)\n} \n\nexport default setLanguage","/* eslint-disable no-underscore-dangle */\n\nimport reducer from './reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport { routerMiddleware } from 'react-router-redux';\n//import { browserHistory } from 'react-router';\nimport { createLogger } from 'redux-logger';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport loadEthernautContract from './middlewares/loadEthernautContract'\nimport loadGamedata from './middlewares/loadGamedata'\nimport loadLevelInstance from './middlewares/loadLevelInstance'\nimport submitLevelInstance from './middlewares/submitLevelInstance'\nimport activateLevel from './middlewares/activateLevel'\nimport setPlayerAddress from './middlewares/setPlayerAddress'\nimport setNetwork from './middlewares/setNetwork'\nimport syncPlayerProgress from './middlewares/syncPlayerProgress'\nimport collectStats from './middlewares/collectStats'\nimport registerPlayer from './middlewares/registerPlayer'\nimport setLanguage from './middlewares/setLanguage';\nimport { createBrowserHistory } from 'history';\nimport * as constants from '../src/constants';\n\nexport const history = createBrowserHistory();\n\nconst middlewares = [\n  loadGamedata,\n  loadEthernautContract,\n  loadLevelInstance,\n  submitLevelInstance,\n  activateLevel,\n  setPlayerAddress,\n  setNetwork,\n  syncPlayerProgress,\n  collectStats,\n  registerPlayer,\n  setLanguage,\n  thunkMiddleware,\n  routerMiddleware(history)\n];\nif(constants.DEBUG_REDUX) {\n  middlewares.splice( 0, 0, createLogger({collapsed: true}) )\n}\n\n// Store\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\n/* eslint-enable */","import * as ethutil from './ethutil'\nimport { createRainbow } from 'rainbow-color'\nimport { rgbaString } from 'color-map'\nimport { loadTranslations } from './translations'\nconst constants = require(`../constants`)\nlet language = localStorage.getItem('lang')\nlet strings = loadTranslations(language)\n\nfunction interceptConsole() {\n\n  // Replace console\n  const logger = Object.assign({}, console);\n  const defaultConsole = console;\n  window.console = logger;\n\n  // ----------------------------------\n  // custom console API\n  // ----------------------------------\n\n  if (!constants.DEBUG) {\n    logger.log = function (...args) { } // KILL LOGS IN PRODUCTION\n  }\n\n  // DIR\n  logger.dir = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.log(args[0])\n  }\n\n  // INFO\n  logger.info = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.info(\n      `%c${args}`,\n      `color: rgba(255, 255, 255, 0.85); font-weight: bold; font-size: 14px; text-shadow: 3px 2px red; background: #006;`\n    )\n  }\n\n  // ASYNC INFO\n  logger.asyncInfo = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.info(\n      `%c${args} %c<  < <<${strings.pleaseWait}>> >  >`,\n      `color: rgba(255, 255, 255, 0.85); font-weight: bold; font-size: 14px; text-shadow: 3px 2px red; background: #006;`,\n      `color: rgba(255, 0, 0, 0.85); font-family: monospace; font-weight: bold; font-size: 18px; text-shadow: 3px 2px white; background: #00f;`,\n    )\n  }\n\n  // GREET\n  logger.greet = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.info(\n      `%c${args}`,\n      `background-color: #222; font-family: monospace; font-weight: bold; font-size: 36px; color: white; text-shadow: 3px 3px 0 rgb(217, 31, 38), 5px 5px 0 rgb(226, 91, 14), 7px 7px 0 rgb(245, 221, 8), 9px 9px 0 rgb(5, 148, 68), 11px 11px 0 rgb(2, 135, 206), 13px 13px 0 rgb(4, 77, 145), 15px 15px 0 rgb(42, 21, 113)`\n    )\n  }\n\n  // VICTORY\n  logger.victory = function (msg1, msg2) {\n    msg1 = processArgs([msg1])\n    msg2 = processArgs([msg2])\n    let c = 0\n    const m = 20\n    const s = 20\n    const rainbow = createRainbow(m)\n    const interval = setInterval(() => {\n      const rawColor = rainbow[c]\n      const color = rgbaString(rawColor)\n      defaultConsole.info(\n        `%c${msg1}`,\n        `color: rgba(0, 0, 0, 0);\n         font-family: monospace;\n         font-weight: bold;\n         font-size: ${Math.floor(20 * (c / m))}px;\n         -webkit-text-stroke-width: 1px;\n         -webkit-text-stroke-color: ${color};`)\n      c++;\n      if (c >= m) {\n        clearInterval(interval)\n        console.greet(msg2)\n      }\n    }, s)\n  }\n\n  // ERROR\n  logger.error = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.error(\n      `%c${args}`,\n      `background-color: #622; color: #f00; font-family: monospace; font-weight: bold; font-size: 18px;`\n    )\n  }\n\n  // WARN\n  logger.warn = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.warn(\n      `%c${args}`,\n      `background-color: #662; color: #ff0; font-family: monospace; font-weight: bold;`\n    )\n  }\n\n  // SECRET\n  logger.secret = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.info(\n      `%c${args}`,\n      `background-color: #262; color: #0f0; font-family: monospace; font-weight: bold;`\n    )\n  }\n  logger.quiet = function (...args) {\n    args = processArgs(args)\n    if (args.length === 0) return\n    defaultConsole.info(\n      `%c${args}`,\n      `background-color: #333; color: #666; font-family: monospace; font-weight: bold; font-size: 10;`\n    )\n  }\n\n  // MINE\n  logger.mineInfo = function (text, txId) {\n    const color = stringToColor(txId)\n    const negColor = invertColor(color)\n\n    window.web3.eth.net.getId().then((res) => {\n      var network_name = constants.ID_TO_NETWORK[res];\n      var networks = Object.values(constants.NETWORKS_INGAME);\n      var networkObject;\n      for (var i = 1; i < networks.length; i++) {\n        if (networks[i].name === network_name) networkObject = networks[i]\n      }\n      defaultConsole.info(\n        `%c⛏️ ${text} ⛏%c`,\n        `color: ${negColor}; font-weight: bold; font-size: 12px; background-color: ${color};`,\n        \"\",\n        networkObject ? `${networkObject.blockExplorer}/tx/${txId}` : ''\n      )\n    }\n    )\n\n  }\n\n  // FILTER LOGGING\n  function processArgs(args) {\n    for (let i = 0; i < args.length; i++) {\n\n      let arg = args[i]\n      const isString = typeof arg === 'string'\n\n      // Filter annoying warnings\n      if (isString && arg.indexOf('deprecated') !== -1) return []\n      if (isString && arg.indexOf('Accessing PropTypes via') !== -1) return []\n      if (isString && arg.indexOf('Slow network is detected.') !== -1) return []\n\n      // Icons\n      if (isString) {\n        arg = arg.replace(new RegExp('@good', 'g'), randGoodIcon())\n        arg = arg.replace(new RegExp('@bad', 'g'), randBadIcon())\n        args[i] = arg\n      }\n    }\n    return args\n  }\n\n  // ----------------------------------\n  // Utils\n  // ----------------------------------\n\n  function hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n  }\n\n  function stringToColor(str) {\n    let hash = hashString(str);\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  function invertColor(hex) {\n    if (hex.indexOf('#') === 0) {\n      hex = hex.slice(1);\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    if (hex.length !== 6) {\n      throw new Error('Invalid HEX color.');\n    }\n    // invert color components\n    let r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n      g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n      b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n    // pad each with zeros and return\n    return '#' + padZero(r) + padZero(g) + padZero(b);\n  }\n\n  function padZero(str, len) {\n    len = len || 2;\n    let zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n  }\n}\nif (constants.CUSTOM_LOGGING) interceptConsole()\n\n// Setup console utils\nfunction setupConsoleUtils() {\n  window.getBalance = ethutil.getBalance\n  window.getBlockNumber = ethutil.getBlockNumber\n  window.sendTransaction = ethutil.sendTransaction\n  window.getNetworkId = ethutil.getNetworkId\n  window.toWei = ethutil.toWei\n  window.fromWei = ethutil.fromWei\n  window.version = constants.VERSION\n  window.contract = strings.notContractSetMessage\n  window.help = function () {\n    console.table({\n      'player': strings.helperPlayer,\n      'ethernaut': strings.helperEthernaut,\n      'level': strings.helperLevel,\n      'contract': strings.helperContract,\n      'instance': strings.helperInstance,\n      'version': strings.helperVersion,\n      'getBalance(address)': strings.helperGetBalance,\n      'getBlockNumber()': strings.helperGetBlockNumber,\n      'sendTransaction({options})': strings.helperSendTransaction,\n      'getNetworkId()': strings.helperGetNetworkId,\n      'toWei(ether)': strings.helperToWei,\n      'fromWei(wei)': strings.helperFromWei,\n      'deployAllContracts()': strings.helperDeployAllContracts,\n    })\n  }\n}\nsetupConsoleUtils()\n\nconst ICONS_BAD = [\n  '(╯°□°）╯',\n  '<|º감º|>',\n  '╰(◣﹏◢)╯',\n  '༼ つ ◕_◕ ༽つ',\n  '\\\\(°□°)/',\n  '(•̪●)',\n  '*¬*',\n  '̿ ̿’ ̿’\\\\̵͇̿̿\\\\з=(•̪●)=ε/̵͇̿̿/’̿”̿ ',\n  'ヽ(`Д´)ﾉ',\n  '\\\\˚ㄥ˚\\\\',\n  '(✖╭╮✖)',\n  '(•̪̀●́)=ε/̵͇̿̿/’̿̿ ̿ ̿̿',\n  '(Ͼ˳Ͽ)..!!!̿̿̿',\n  '(⋟﹏⋞)',\n  'ε(´סּ︵סּ`)з',\n  '¯\\\\_(ツ)_/¯ ',\n  '‹’’›(Ͼ˳Ͽ)‹’’›   ',\n  '(╯°□°)--︻╦╤─ - - - ',\n  '(c ͡|Q ͜ʖ ͡o)╦╤─',\n  '(-_- ;)',\n  '/-.-\\\\',\n  '( ͡ °~͡° )',\n  'ლ(́◕◞Ѿ◟◕‵ლ)',\n  'ヽ(´o｀；',\n  '(◢_◣)'\n]\nconst ICONS_GOOD = [\n  '◕_◕',\n  'ˁ(⦿ᴥ⦿)ˀ',\n  '◖(◣☩◢)◗',\n  '龴ↀ◡ↀ龴',\n  '| – _ – |',\n  '‘(◣_◢)’',\n  'd[ o_0 ]b',\n  '龴ↀ◡ↀ龴',\n  '|[●▪▪●]|',\n  '^⨀ᴥ⨀^',\n  '⦿⽘⦿',\n  '⎦˚◡˚⎣',\n  '(-(-_(-_-)_-)-)',\n  '(◔/‿\\\\◔)',\n  'O=(\\'-\\'Q)',\n  't(-.-t)',\n  '<>_<>',\n  '\\\\,,/(◣_◢)\\\\,,/',\n  'ᕦ(ò_óˇ)ᕤ',\n  '╚(▲_▲)╝',\n  '(‾⌣‾)',\n  '( ͡° ͜ʖ ͡°)',\n  '⊂(✰‿✰)つ',\n  '(⌐■_■)',\n  '☚ (<‿<)☚',\n  '٩(^‿^)۶',\n  '☜Ҩ.¬_¬.Ҩ☞',\n  '(っ◕‿◕)っ',\n  '≧◔◡◔≦',\n  '٩(- ̮̮̃-̃)۶',\n  '\\\\(ˆ˚ˆ)/',\n  '【ツ】',\n  '٩(- ̮̮̃-̃)۶',\n  '=^..^=',\n  '•|龴◡龴|•',\n  '✌(◕‿-)✌',\n  '／人 ⌒ ‿‿ ⌒ 人＼',\n  '☚ (<‿<)☚',\n  'ʕ•̫͡•ʕ*̫͡*ʕ•͓͡•ʔ-̫͡-ʕ•̫͡•ʔ*̫͡*ʔ-̫͡-ʔ',\n  'ヽ(￣(ｴ)￣)ﾉ',\n  '(●*∩_∩*●)',\n  '♪└(￣◇￣)┐♪└(￣◇￣)┐♪└(￣◇￣)┐♪'\n]\nexport function randInt(min, max) { return Math.floor((max - min) * Math.random()) + min }\nexport function randBadIcon() { return ICONS_BAD[randInt(0, ICONS_BAD.length)] }\nexport function randGoodIcon() { return ICONS_GOOD[randInt(0, ICONS_GOOD.length)] }","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport * as constants from '../constants';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport getlevelsdata from '../utils/getlevelsdata';\n//import moment from 'moment'\n\nclass Mosaic extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      lang: localStorage.getItem('lang')\n    }\n  }\n\n  render() {\n\n    // Array for tiles in the Mosaic\n    var [levelData,] = getlevelsdata(this.props, 'mosaic');\n\n    return (\n      <section className=\"game\">\n        {levelData.map((level) => {\n          return (\n            <Link\n              key={level.name}\n              to={\n                this.props.web3 && level.deployedAddress //on read only mode in custom network this field 'deployedAddress' isnt present\n                  ? `${constants.PATH_LEVEL_ROOT}${level.deployedAddress}`\n                  : `${constants.PATH_LEVEL_ROOT}${level.id}`\n              }\n            >\n              <div className=\"content_img\">\n              <video\n        autoPlay={true}\n        playsInline={true}\n        preload=\"metadata\"\n        loop={true}\n        muted={true}\n        src={level.src}>\n      </video>\n\n                <div>\n                  {`${level.completed ? ' ✔' : ''}`}{' '}\n                  {level.name}\n                  <br /> {level.difficulty}\n                </div>\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    web3: state.network.web3,\n    levels: state.gamedata.levels,\n    player: state.player,\n    activeLevel: state.gamedata.activeLevel\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n  }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Mosaic);\n\n\n\n","import React from \"react\";\nimport Mosaic from \"./Mosaic\";\nimport Footer from \"../components/common/Footer\";\nimport ReactGA from \"react-ga\";\nimport * as constants from \"../constants\";\nimport { loadTranslations } from \"../utils/translations\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"../hoc/withRouter\";\nimport { randGoodIcon } from \"../utils/^^\";\nimport * as actions from '../actions'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {'nickname': '', 'telegram': ''};\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleTGChange = this.handleTGChange.bind(this);\n\n    // Analytics\n    ReactGA.initialize(constants.GOOGLE_ANALYTICS_ID);\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.childrenElement.parentElement.scrollTop = 0;\n    }\n  }\n\n  navigateToFirstIncompleteLevel() {\n    // Find first incomplete level\n    let target = this.props.levels[0].deployedAddress;\n    for (let i = 0; i < this.props.levels.length; i++) {\n      const level = this.props.levels[i];\n      if (!level.deployedAddress) { \n        return this.props.navigate(`${constants.PATH_LEVEL_ROOT}${i}`);\n      }\n      const completed = this.props.completedLevels[level.deployedAddress];\n      if (!completed) {\n        target = level.deployedAddress;\n        break;\n      }\n    }\n\n    // Navigate to first incomplete level\n    this.props.navigate(`${constants.PATH_LEVEL_ROOT}${target}`);\n  }\n\n  handleNameChange(event) {\n    this.setState({nickname: event.target.value});\n  }\n\n  handleTGChange(event) {\n    this.setState({telegram: event.target.value});\n  }\n  \n\n  render() {\n    let language = localStorage.getItem(\"lang\");\n    let strings = loadTranslations(language);\n    const supportedNetworks = Object.keys(constants.NETWORKS).filter(\n      (key) => key !== \"LOCAL\" && key !== \"UNDEFINED\"\n    );\n\n    // change the network to goreli network\n    async function switchToMumbai() {\n      let elements = document.querySelectorAll('.progress-bar-wrapper');\n      const deployWindow = document.querySelectorAll('.deploy-window-bg');\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: `0x${Number(constants.NETWORKS.MUMBAI.id).toString(16)}` }],//if on wrong network giving option to switch to sepolia network.\n        });\n        deployWindow[0].style.display = 'none';\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask.\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [\n                {\n                  chainId: [{ chainId: `0x${Number(constants.NETWORKS.MUMBAI.id).toString(16)}` }]\n                },\n              ],\n            });\n            deployWindow[0].style.display = 'none';\n          } catch (addError) {\n            if (addError.code === 4001) {\n              //User has rejected changing the request\n              elements[0].style.display = 'none';\n            }\n            console.error(\"Can't add nor switch to the selected network\")\n          }\n        } else if (switchError.code === 4001) {\n          //User has rejected changing the request\n          if (elements[0]) elements[0].style.display = 'none';\n        }\n      }\n    }\n\n    return (\n      <div className=\"appcontainer\">\n        {/* Parent container */}\n        <main>\n          {/* Main title and buttons */}\n          <section className=\"titles\">\n            <a href={constants.PATH_ROOT}>\n              <img\n                id=\"ethical-hacking\"\n                src=\"../../imgs/ETHical Hacking_v2.png\"\n                alt=\"ETHical-Hacking\"\n                className=\"ethical-hacking\"\n              />\n            </a>\n\n            {/* <div\n              className=\"row\"\n              style={{\n                paddingLeft: '100px',\n                paddingRight: '40px',\n              }}> */}\n\n              \n              <center>\n              <div className=\"col-sm-8\">\n                {/* INFO */}\n                { this.props.player.nickname ?\n                ( <div><h1>Hello, {this.props.player.nickname}!</h1>\n                    <ul>\n                      <button\n                        onClick={() => this.navigateToFirstIncompleteLevel()}\n                        className=\"buttons\">\n                        {strings.playNow}\n                      </button>\n                    </ul>\n                    {/* Levels */}\n                    <Mosaic></Mosaic>\n                  </div>\n                )\n                : (<form>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      style={{marginTop: '10px'}}\n                      width=\"auto\"\n                      onChange={this.handleNameChange}\n                      placeholder=\"Nickname\"\n                      name=\"nickname\">\n                    </input>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      style={{marginTop: '10px'}}\n                      width=\"auto\"\n                      onChange={this.handleTGChange}\n                      placeholder=\"Telegram\"\n                      name=\"telegram\">\n                    </input>\n                    <button\n                      type=\"button\"\n                      style={{marginTop: '10px'}}\n                      className='btn register_button'\n                      onClick={evt => this.props.register(this.state.nickname, this.state.telegram)}>\n                      Register\n                    </button>\n                  </form>)}\n                  </div>\n                  </center>\n                  {/* </div> */}\n                  </section>\n                    {/* Deploy Window */}\n                    <div className=\"deploy-window-bg\">\n                      <div className=\"deploy-window\">\n                        <h1>{randGoodIcon()}</h1>\n                        <h1>{strings.deployMessageTitle}</h1>\n                          <br />\n                            {strings.deployMessage}\n                              <ul>\n                                {supportedNetworks.map((network, idx) =>\n                                  <li key={idx}>{network}</li>\n                                )}\n                              </ul>\n                              <div className=\"choice-buttons\">\n                                <button\n                                  className=\"buttons\"\n                                  onClick={switchToMumbai}>\n                                  {strings.switchToMumbai}\n                                </button>\n                              </div>\n                              \n                        </div>\n                      </div>\n                      {/* Game description */}\n                      <section className=\"Description\">\n                        <center>\n                          <hr />\n                        </center>\n                      </section>\n        </main>\n        {/* Footer */}\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    levels: state.gamedata.levels,\n    completedLevels: state.player.completedLevels,\n    player: state.player\n  };\n}\n\n// function mapDispatchToProps(dispatch) {\n//   return bindActionCreators({}, dispatch);\n// }\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    register: actions.register\n  }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import React from 'react'\n\nconst NotFound404 = () => {\n  return (\n    <div className=\"container\">\n      <br/>\n      <h3 className=\"title\">404 Not Found</h3>\n    </div>\n  )\n}\n\nexport default NotFound404\n","function LeaderIcon() {\n  return (\n    <svg\n      className=\"leader-icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n    >\n      <path d=\"M16 0H144c5.3 0 10.3 2.7 13.3 7.1l81.1 121.6c-49.5 4.1-94 25.6-127.6 58.3L2.7 24.9C-.6 20-.9 13.7 1.9 8.5S10.1 0 16 0zM509.3 24.9L401.2 187.1c-33.5-32.7-78.1-54.2-127.6-58.3L354.7 7.1c3-4.5 8-7.1 13.3-7.1H496c5.9 0 11.3 3.2 14.1 8.5s2.5 11.5-.8 16.4zM432 336c0 97.2-78.8 176-176 176s-176-78.8-176-176s78.8-176 176-176s176 78.8 176 176zM264.4 241.1c-3.4-7-13.3-7-16.8 0l-22.4 45.4c-1.4 2.8-4 4.7-7 5.1L168 298.9c-7.7 1.1-10.7 10.5-5.2 16l36.3 35.4c2.2 2.2 3.2 5.2 2.7 8.3l-8.6 49.9c-1.3 7.6 6.7 13.5 13.6 9.9l44.8-23.6c2.7-1.4 6-1.4 8.7 0l44.8 23.6c6.9 3.6 14.9-2.2 13.6-9.9l-8.6-49.9c-.5-3 .5-6.1 2.7-8.3l36.3-35.4c5.6-5.4 2.5-14.8-5.2-16l-50.1-7.3c-3-.4-5.7-2.4-7-5.1l-22.4-45.4z\" />\n    </svg>\n  );\n}\n\nexport default LeaderIcon;\n","import React from \"react\";\nimport onClickOutside from 'react-onclickoutside'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"../hoc/withRouter\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions\";\nimport * as constants from \"../constants\";\nimport { loadTranslations } from \"../utils/translations\";\nimport PropTypes from \"prop-types\";\nimport { ProgressBar } from \"react-loader-spinner\";\nimport { svgFilter } from \"../utils/svg\";\nimport LeaderIcon from \"../components/leaderboard/LeaderIcon\";\n//import ConsoleDetect from '../components/ConsoleDetect';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dark: false,\n      lang: localStorage.getItem(\"lang\"),\n      chainId: 0,\n      activeDropdown: null,\n      multiDDOpen: false,\n    };\n\n    if (this.props.web3) {\n      window.ethereum.request({ method: \"eth_chainId\" }).then((id) => {\n        this.setState({ chainId: Number(id) });\n      });\n    }\n  }\n\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n  };\n\n  setActiveTab(tabIndex) {\n    const { activeDropdown } = this.state;\n    const newState =\n      activeDropdown === tabIndex && activeDropdown ? null : tabIndex;\n    this.setState({ activeDropdown: newState });\n  }\n\n  getDDClassName(tabdcurrentTabIndex) {\n    const { activeDropdown } = this.state;\n    const className = tabdcurrentTabIndex === activeDropdown ? \"show\" : \"hide\";\n    return className;\n  }\n\n  toggleDropdownState() {\n    this.setState({\n      multiDDOpen: !this.state.multiDDOpen,\n    });\n  }\n\n  closeDropdown() {\n    if (!this.state.multiDDOpen) return;\n    this.setState({\n      multiDDOpen: false,\n    });\n  }\n\n  componentDidMount() {\n    // var black = getComputedStyle(document.documentElement).getPropertyValue(\n    //   \"--black\"\n    // );\n    // var primaryColor = getComputedStyle(document.documentElement).getPropertyValue(\n    //   \"--primary-color\"\n    // );\n    // if(primaryColor === black) this.toggleDarkMode()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps && this.props.location !== prevProps.location) {\n      let elements = document.getElementsByClassName(\"level-tile\");\n      if (elements.length !== 0) {\n        for (let i = 0; i < elements.length; i++) {\n          let element = elements[i];\n          if (element && element.style)\n            element.style.filter = this.state.dark ? svgFilter() : null;\n        }\n      }\n\n      // Change The Ethernaut logo\n      var theEthernaut = document.getElementById(\"ethical-hacking\");\n      if (theEthernaut && theEthernaut.style)\n        theEthernaut.style.filter = this.state.dark ? svgFilter() : null;\n\n      // Change Arrow\n      let isArrowInPage = document.getElementById(\"arrow\");\n      if (isArrowInPage && isArrowInPage.style)\n        isArrowInPage.style.filter = this.state.dark ? svgFilter() : null;\n\n      // Change all custom images\n      var imageElements = document.getElementsByClassName(\"custom-img\");\n      if (imageElements.length !== 0) {\n        for (let i = 0; i < imageElements.length; i++) {\n          let element = imageElements[i];\n          if (imageElements.length === 0) element = imageElements;\n          if (element && element.style)\n            element.style.filter = this.state.dark ? svgFilter() : null;\n        }\n      }\n    }\n  }\n\n  changeLanguage(e, value) {\n    e.preventDefault();\n    this.props.setLang(value);\n  }\n\n  async changeNetwork(network) {\n    const elements = document.querySelectorAll(\".progress-bar-wrapper\");\n    elements[0].style.display = \"flex\";\n    try {\n      const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n      if (Number(chainId) === Number(network.id)) {\n        return;\n      }\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: `0x${Number(network.id).toString(16)}`,\n          },\n        ],\n      });\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: `0x${Number(network.id).toString(16)}`,\n                chainName: network.name,\n                rpcUrls: [network.rpcUrl],\n                nativeCurrency: {\n                  name: network.currencyName,\n                  symbol: network.currencySymbol,\n                  decimals: 18,\n                },\n                blockExplorerUrls: [network.blockExplorer],\n              },\n            ],\n          });\n        } catch (addError) {\n          if (addError.code === 4001) {\n            //User has rejected changing the request\n            elements[0].style.display = \"none\";\n          }\n          console.error(\"Can't add nor switch to the selected network\");\n        }\n      } else if (switchError.code === 4001) {\n        //User has rejected changing the request\n        elements[0].style.display = \"none\";\n      }\n    }\n  }\n\n  // toggleDarkMode() {\n  //   var documentElement = document.documentElement;\n  //   if (documentElement && documentElement.style) {\n  //     var pink = getComputedStyle(document.documentElement).getPropertyValue(\n  //       \"--pink\"\n  //     );\n  //     var black = getComputedStyle(document.documentElement).getPropertyValue(\n  //       \"--black\"\n  //     );\n\n  //     var newPrimary = this.state.dark ? pink : black;\n  //     var newSecondary = this.state.dark ? black : pink;\n\n  //     document.documentElement.style.setProperty(\"--primary-color\", newPrimary);\n  //     document.documentElement.style.setProperty(\n  //       \"--secondary-color\",\n  //       newSecondary\n  //     );\n\n  //     // Change OpenZeppelin logo\n  //     var theLogo = document.getElementById(\"logo\");\n  //     if (theLogo && theLogo.style)\n  //       theLogo.style.filter = !this.state.dark ? svgFilter() : null;\n\n  //     // // Change OpenZeppelin logo\n  //     // var theChristmashat = document.getElementById(\"christmas-hat\")\n  //     // if (theChristmashat && theChristmashat.style) theChristmashat.style.filter = !this.state.dark\n  //     //   ? svgFilter()\n  //     //   : null;\n\n  //     // Change The Ethernaut logo\n  //     var theEthernaut = document.getElementById(\"ethical-hacking\");\n  //     if (theEthernaut && theEthernaut.style)\n  //       theEthernaut.style.filter = !this.state.dark ? svgFilter() : null;\n\n  //     // Change Arrow\n  //     let isArrowInPage = document.getElementById(\"arrow\");\n  //     if (isArrowInPage && isArrowInPage.style)\n  //       isArrowInPage.style.filter = !this.state.dark ? svgFilter() : null;\n\n  //     // Change Mosaic and levels logo\n  //     let elements = document.getElementsByClassName(\"level-tile\");\n  //     for (let i = 0; i < elements.length; i++) {\n  //       let element = elements[i];\n  //       if (element && element.style)\n  //         element.style.filter = !this.state.dark ? svgFilter() : null;\n  //     }\n\n  //     // Change all custom images\n  //     elements = document.getElementsByClassName(\"custom-img\");\n  //     for (let i = 0; i < elements.length; i++) {\n  //       let element = elements[i];\n  //       if (element && element.style)\n  //         element.style.filter = !this.state.dark ? svgFilter() : null;\n  //     }\n\n  //     this.setState({\n  //       dark: !this.state.dark,\n  //     });\n  //   }\n  // }\n\n  handleClickOutside = () => {\n    this.closeDropdown();\n  }\n\n  render() {\n    let strings = loadTranslations(this.state.lang);\n\n    const LANGUAGES_MAP = {\n      en: strings.english,\n      ru: strings.russian\n    };\n    \n    const ddOpen = Boolean(this.state.multiDDOpen);\n    return (\n      <div onClick={() => this.closeDropdown()}>\n        <div className=\"lines\">\n          <center>\n            <hr className=\"top\" />\n          </center>\n          <center>\n            <hr className=\"top\" />\n          </center>\n        </div>\n        <center>\n          <header>\n            <ul className=\"header-ul\">\n              {/* <li key={\"hiring\"} className=\"nav-links\">\n                <a\n                  className=\"buttons hiring-button\"\n                  href=\"https://grnh.se/dd38880f3us\"\n                >\n                  <button>{strings.hiring}</button>\n                </a>\n              </li> */}\n            </ul>\n            {/* <a className=\"logo-container\" href=\"https://openzeppelin.com\">\n              <img\n                id=\"logo\"\n                className=\"logo\"\n                src=\"../../imgs/oz-logo.svg\"\n                alt=\"logo\"\n              />\n            </a> */}\n            {/* ---- Multi Dropdown Container */}\n            <div\n              onClick={(e) => e.stopPropagation()}\n              className=\"multi-dropdown\"\n            >\n              {/* dropdown icon */}\n              <div\n                onClick={() => this.toggleDropdownState()}\n                className=\"multi-dropdown__icon\"\n              >\n                <i className=\"fas fa-bars\"></i>\n              </div>\n              {/* dropdown icon */}\n              {/* dropdown content */}\n              <ul\n                className={`multi-dropdown__dropdown ${\n                  ddOpen ? \"--open\" : \"--closed\"\n                }`}\n              >\n                <div className=\"dropdown-pill --left\">\n                  <div>\n                    <Link\n                      to={\n                        window.location.pathname !== constants.PATH_ROOT\n                          ? constants.PATH_ROOT\n                          : constants.PATH_HELP\n                      }\n                    >\n                      <div className=\"filled-icon\">\n                        {window.location.pathname !== constants.PATH_ROOT ? (\n                          <>\n                            <i className=\"fas fa-home\"></i>\n                          </>\n                        ) : (\n                          <>\n                            <i className=\"fas fa-question\"></i>\n                          </>\n                        )}\n                      </div>\n                    </Link>\n                    {window.location.pathname === constants.PATH_ROOT &&\n                      !!this.props.web3 && (\n                        <div className=\"element-in-row filled-icon\">\n                          <Link to={constants.PATH_LEADERBOARD}>\n                            <LeaderIcon />\n                          </Link>\n                        </div>\n                      )}\n                    {/* <input\n                      onClick={() => {\n                        this.toggleDarkMode();\n                      }}\n                      className=\"element-in-row toggle --small\"\n                      type=\"checkbox\"\n                    /> */}\n                    \n                    <ul className=\"nav navbar-nav pull-right\">\n              {/* {<li>\n                <Link style={{fontSize: '16px'}}><ConsoleDetect/></Link>\n              </li>} */}\n              {/* <li>\n                <Link style={{fontSize: '16px'}}>{this.props.player.nickname ? <span\n                  style={{fontSize: '16px'}}\n                  className=\"text-muted\"\n                >Hello, {this.props.player.nickname}!</span> : \"\"}</Link>\n              </li> */}\n            </ul>\n\n                  </div>\n                </div>\n\n                <div\n                  \n                >\n                  \n                  <div className={this.getDDClassName(2)}>\n                    {Object.values(constants.NETWORKS_INGAME).map((network, index) => {\n                      if (network && network.name !== \"local\") {\n                        if (Number(network.id) === this.state.chainId)\n                          return false; // filter out current network\n                        return (\n                          <div key={index}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.changeNetwork(network);\n                            }}\n                            className=\"dropdown-pill\"\n                          >\n                            <a id={network.name} key={network.name} href=\"/\">\n                              {network.name}\n                            </a>\n                          </div>\n                        );\n                      }\n                      return null;\n                    })}\n                  </div>\n                </div>\n\n                <div className=\"single-dropdown\">\n                  <p onClick={() => this.setActiveTab(1)}>\n                    <i className=\"fas fa-globe-americas\"></i>\n                    <span>{strings.Languages}</span>\n                  </p>\n                  <div className={this.getDDClassName(1)}>\n                    {Object.keys(LANGUAGES_MAP).map((languageString, index) => (\n                      <div key={index}\n                        onClick={(e) => {\n                          this.changeLanguage(e, languageString);\n                        }}\n                        className=\"dropdown-pill\"\n                      >\n                        <a href=\"/\">{LANGUAGES_MAP[languageString]}</a>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </ul>\n              {/* dropdown content */}\n            </div>\n          </header>\n          <ProgressBar\n            height=\"100\"\n            width=\"100\"\n            borderColor={\n              this.state.dark\n                ? getComputedStyle(document.documentElement).getPropertyValue(\n                    \"--pink\"\n                  )\n                : getComputedStyle(document.documentElement).getPropertyValue(\n                    \"--black\"\n                  )\n            }\n            barColor={\n              this.state.dark\n                ? getComputedStyle(document.documentElement).getPropertyValue(\n                    \"--pink\"\n                  )\n                : getComputedStyle(document.documentElement).getPropertyValue(\n                    \"--black\"\n                  )\n            }\n            ariaLabel=\"progress-bar-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"progress-bar-wrapper\"\n            visible={true}\n          />\n          {!this.props.web3 && (\n            <div\n              style={{ backgroundColor: \"#eddfd6\", border: \"none\" }}\n              className=\"alert alert-warning\"\n            >\n              <strong>{strings.warning}! </strong>\n              <span>{strings.warningMessage}</span>\n            </div>\n          )}\n        </center>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    web3: state.network.web3,\n    allLevelsCompleted: state.player.allLevelsCompleted,\n    player: state.player\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setLang: actions.setLang,\n    },\n    dispatch\n  );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(onClickOutside(Header)));\n","import { useState } from \"react\"\n\nconst style = {\n    position: 'fixed',\n    left: '50vw',\n    transform: 'translateX(-50%)',\n    backgroundColor: 'var(--secondary-color)',\n    color: \"var(--primary-color)\",\n    padding: '5px 15px',\n    top: '10px',\n    borderRadius: '5px',\n    fontSize: '15px',\n}\n\nexport function useToast(time) { \n    const [message, setMessage] = useState(\"\") \n    const [currentPos, setCurrentPos] = useState('-200%');\n    \n    const currentStyle = {\n        ...style,\n        transition: 'transform 0.3s ease-in-out',\n        transform: `translateX(-50%) translateY(${currentPos})`,\n    }\n\n    return {\n        Toast: <div style={currentStyle}>{message}</div>,\n        toast: (newMessage) => {\n            setMessage(newMessage)\n            setCurrentPos('25%')\n            setTimeout(() => {\n                setCurrentPos('-200%')\n            } , time*1000 || 1000)\n        }\n    }\n}\n\n","import { useState } from \"react\";\n\nconst Tooltip = (props) => { \n\n    const { content } = props;\n\n    const [isVisible, setIsVisible] = useState(false)\n\n    const handleMouseEnter = () => { \n        setIsVisible(true)\n    }\n\n    const handleMouseLeave = () => { \n        setIsVisible(false)\n    }\n    \n\n    const style = {\n        position: \"absolute\",\n        bottom: 20,\n        visibility: isVisible?\"visible\":\"hidden\"\n    }\n\n    const parentStyle = {\n        position:\"relative\"\n    }\n\n    return (\n        <div style={parentStyle}>\n            <div className='tooltip-container' style={style}>{content}</div>\n            <div\n                onMouseLeave={handleMouseLeave}\n                onMouseEnter={handleMouseEnter}\n            >{props.children}</div>\n        </div>\n    )\n}\n\nexport default Tooltip;","import { useToast } from \"../utils/Toast\";\nimport Tooltip from \"../utils/Tooltip\";\n\nfunction LeaderTile(props) { \n    const { rank, leader, onAliasEdit, currentUser } = props;\n    const { toast, Toast } = useToast()\n\n    let { player, score, totalNumberOfLevelsCompleted, alias } = leader;\n\n\n    const handleClick = () => { \n        navigator.clipboard.writeText(player);\n        toast(\"Address copied\")\n    }    \n\n    return (\n        <>\n            {Toast}\n            <div className='leaderboard-tile'>\n                <div className=\"leaderboard-rank\">{rank}</div>\n                <div className=\"leaderboard-player\">\n                    {\n                        alias ?\n                            <div>{alias}</div> :\n                            <Tooltip content={player}>\n                                <div onClick={handleClick}>{player.split(\"\").slice(0, 18).join(\"\")}...</div>\n                            </Tooltip>\n                    }\n                </div>\n                <div className=\"leaderboard-levels-solved\">\n                    {totalNumberOfLevelsCompleted}\n                </div>\n                <div className=\"leaderboard-score\">{score.toFixed(2)}</div>\n                <div onClick={onAliasEdit} className='leaderboard-alias-edit'>\n                    {\n                        currentUser.toLowerCase() === player.toLowerCase() && <i className=\"leaderboard-edit-icon fa-solid fa-pen-to-square\"></i>\n                    }\n                </div>\n            </div>\n             \n        </>\n    )\n}\n\nexport default LeaderTile;","import axios from \"axios\";\nimport { ALIAS_PATH } from \"../../constants\";\n\nconst getAliases = async () => { \n    try { \n        const response = await axios.get(ALIAS_PATH)\n        window.aliases = response.data\n    } catch (err) { \n        console.log(err)\n    }\n}\n\nexport const checkIfAliasIsPresent = (alias) => {\n    try {\n        const aliases = Object.values(window.aliases)\n        return aliases.includes(alias)\n    } catch (err) { \n        console.log(err)\n    }\n}\n\ngetAliases()","import React from \"react\";\nimport Filter from \"bad-words\"\nimport { useToast } from \"../utils/Toast\";\nimport { checkIfAliasIsPresent } from \"./checkIfAliasExist\";\n\nconst filter = new Filter()\n\nclass HubspotForm extends React.Component{\n  constructor() { \n    super()\n    this.formRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (window.hbspt) {\n      // @ts-ignore\n      window.hbspt.forms.create({\n        target: \"#hubspotForm\",\n        ...this.props,\n        onFormReady: this.onFormReady,\n        submitButtonClass: \"leaderboard-alias-submit-button\",\n        onFormSubmitted: this.onFormSubmitted,\n        onFormSubmit:this.onFormSubmit\n      });\n    }\n  }\n\n  onFormReady = (form) => { \n    const spans = form.querySelectorAll(\"span\");\n    const legends = form.querySelectorAll(\".hs-field-desc\");\n    const buttons = form.querySelectorAll(\".leaderboard-alias-submit-button\");\n    const inputs = form.querySelectorAll(\"input\");\n\n\n    const emailElement = spans[0]\n    const usernameElement = spans[2]\n    const label = legends[1]\n    const addressInput = inputs[2]\n    const ethernautAddressLabel = spans[4]\n    const checkboxLabel = spans[5]\n\n    const styles = getComputedStyle(document.documentElement);\n\n    const textColor = styles.getPropertyValue('--secondary-color');\n    const bgColor = styles.getPropertyValue('--primary-color');\n\n    emailElement.style.color = textColor;\n    usernameElement.style.color = textColor;\n    ethernautAddressLabel.style.color = textColor;\n    checkboxLabel.style.color = textColor;\n    \n    label.style.color = textColor;\n    label.style.opacity = 0.7;\n\n    buttons[0].style.backgroundColor = textColor;\n    buttons[0].style.border = \"none\";\n    buttons[0].style.color = bgColor;\n    buttons[0].style.padding = '8px';\n    buttons[0].style.borderRadius = '5px';\n    buttons[0].style.cursor = 'pointer';\n\n    addressInput.style.pointerEvents = 'none';\n    setNativeValue(addressInput, this.props.currentUser);\n\n    form.addEventListener('submit', (event) => { \n      const alias = event.srcElement[1].value;\n      const email = event.srcElement[0].value;\n      if (!(alias && email)) { \n        this.props.toast(\"Please fill in all the fields\");\n        event.stopPropagation();\n        return;\n      }\n      if (filter.isProfane(alias)) { \n        this.props.toast(\"Please don't use offensive words in your alias\");\n        event.stopPropagation();\n        return;\n      }\n      if(filter.isProfane(email)) { \n        this.props.toast(\"Please don't use offensive words in your email\");\n        event.stopPropagation();\n        return;\n      }\n      if(checkIfAliasIsPresent(alias)) { \n        this.props.toast(\"This alias is already taken\");\n        event.stopPropagation();\n      }\n    })\n  }\n\n  onFormSubmitted = (form) => { \n    form.remove();\n    const styles = getComputedStyle(document.documentElement);\n    const textColor = styles.getPropertyValue('--secondary-color');\n    const outerElement = document.querySelector('#hubspotForm')\n    const element = document.createElement('div')\n    element.innerHTML = \"Thanks for submitting the form.\"\n    element.style.color = textColor\n    element.style.position = 'relative'\n    element.style.fontSize = '17px'\n    outerElement.insertAdjacentElement('afterbegin', element)\n\n    // change the height of modal\n    const modal = document.querySelector('.leaderboard-modal-body')\n    modal.style.height = '150px'\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <div ref={this.formRef} id=\"hubspotForm\" />\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction WithToast(Component) {\n  return function WrappedComponent(props) {\n    const { Toast, toast } = useToast(2)\n    return (\n      <>\n        {Toast}\n        <Component toast={toast} {...props} />\n      </>\n    );\n  };\n}\n\nfunction setNativeValue(element, value) {\n    let lastValue = element.value;\n    element.value = value;\n    let event = new Event(\"input\", { target: element, bubbles: true });\n    // React 15\n    event.simulated = true;\n    // React 16\n    let tracker = element._valueTracker;\n    if (tracker) {\n        tracker.setValue(lastValue);\n    }\n    element.dispatchEvent(event);\n}\n\nexport default WithToast(HubspotForm);","import { useRef, useEffect } from \"react\"\nimport HubspotForm from \"./Hubspot\";\n\nexport default function AliasModal(props) { \n    const { show, onClose, currentUser } = props;\n    const modalEl = useRef(null);\n\n    useEffect(() => {\n        const handler = (event) => {\n            if (!modalEl.current) {\n                return;\n            }\n            if (!modalEl.current.contains(event.target)) {\n                onClose(false);\n            }\n        };\n        document.addEventListener(\"click\", handler, true);\n        return () => {\n            document.removeEventListener(\"click\", handler);\n        };\n    },[onClose])\n\n    return (\n        show && (\n            <div className='leaderboard-alias-modal'>\n                <div ref={modalEl} className=\"leaderboard-modal-body\">\n                    <div onClick={onClose} className='leaderboard-close-button'>\n                        <i className=\"fa-sharp fa-solid fa-xmark\"></i>\n                    </div>\n                    <h3>Leaderboard alias submission</h3>\n                    <HubspotForm\n                        portalId=\"7795250\"\n                        formId=\"5c2762b1-ad80-4a47-9ef5-91f98d9e9419\"\n                        region=\"na1\"\n                        currentUser={currentUser}\n                    />\n                </div>\n            </div>\n        )\n    )\n}","import LeaderTile from \"./LeaderTile\";\nimport AliasModal from \"./AliasModal\";\nimport { useEffect, useState } from \"react\";\n\nfunction LeaderList(props) {\n    const { players } = props;\n    const [show, setShow] = useState(false)\n    const [currentUser, setCurrentUser] = useState(null)\n\n    const showEditModal = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => { \n        setShow(false)\n    }\n\n    useEffect(() => { \n        window.ethereum.request({ method: 'eth_requestAccounts' }).then(address => { \n            setCurrentUser(address[0])\n        })\n    })\n\n    return (\n        <>\n        <AliasModal currentUser={currentUser} onClose={handleClose} show={show} />\n        <div>\n            {players.slice(0,20).map((leader) =>\n                <LeaderTile\n                    currentUser={currentUser}\n                    onAliasEdit={showEditModal}\n                    key={leader.player} rank={leader.rank} leader={leader}\n                />\n            )}\n            </div>\n        </>\n    )\n}\n\nexport default LeaderList;","function Headers() { \n    return (\n        <div className='leaderboard-tile'>\n            <div className=\"leaderboard-rank leaderboard-header\">Rank</div>\n            <div className=\"leaderboard-player leaderboard-header\">Player</div>\n            <div  className=\"leaderboard-levels-solved leaderboard-header\">Levels solved</div>\n            <div className=\"leaderboard-score leaderboard-header\">Score</div>\n            <div className='leaderboard-alias-edit leaderboard-header'></div>\n        </div>\n    )\n}\n\nexport default Headers;","const Search = (props) => { \n    const { keyword, onKeywordChange } = props;\n\n    const handleChange = (e) => { \n        onKeywordChange(e.target.value)\n    }\n\n    return (\n        <div className='leaderboard-search-outer-container'>\n            <div className=\"leaderboard-search stats-input-container\">\n                <input\n                    type=\"text\"\n                    className=\"stats-input form-control\"\n                    placeholder=\"Search player address / alias\"\n                    value={keyword}\n                    onChange={handleChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Search","import \"../styles/leaderboard.css\";\nimport LeaderList from \"../components/leaderboard/LeaderList\";\nimport Headers from \"../components/leaderboard/Headers\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport ReactPaginate from 'react-paginate';\nimport Search from \"../components/leaderboard/Search\";\nimport { getNetworkNamefromId } from \"../utils/ethutil\";\nimport { NETWORKS } from \"client/src/constants\";\nimport Footer from \"../components/common/Footer\";\nimport axios from \"axios\";\nimport { ALIAS_PATH, getLeaderboardPath } from \"client/src/constants\";\n\nconst playersPerPage = 20;\n\nlet aliases = {}\n\nconst fetchAliases = async () => {\n    try {\n        const response = await axios.get(ALIAS_PATH)\n        aliases = response.data\n    } catch (err) { \n        console.log(\"Failed to fetch aliases\")\n    }\n}   \n\nfetchAliases()\n\nfunction Leaderboard() { \n    const [offset, setOffset] = useState(0);\n    const [playersWithRank, setPlayersWithRank] = useState([])\n    const [searchResult, setSearchResult] = useState([])\n    const [searchKeyword, setSearchKeyword] = useState('')\n    const [currentNetworkName, setCurrentNetworkName] = useState('')\n\n    const pageCount = Math.ceil(searchResult.length / playersPerPage);\n    const endOffset = offset + playersPerPage;\n    const currentItems = searchResult.slice(offset, endOffset);\n\n    const handleNetworkChange = useCallback(async (networkId) => { \n        if (!networkId) { \n            return;\n        }\n        const networkName = getNetworkNamefromId(Number(networkId))\n        setCurrentNetworkName(networkName)\n    }, [])\n\n    const initateCurrentlySelectedChain = useCallback(async () => { \n        const networkId = await window.ethereum.request({ method: 'eth_chainId' })\n        handleNetworkChange(networkId)\n    }, [handleNetworkChange])\n\n    // During the initial render\n    useEffect(() => { \n        initateCurrentlySelectedChain()\n    }, [initateCurrentlySelectedChain])\n\n    useEffect(() => {\n        window.ethereum.on('networkChanged', handleNetworkChange)\n        return () => { \n            window.ethereum.removeListener('networkChanged', handleNetworkChange)\n        }\n    }, [handleNetworkChange])\n\n    const fetchAndUpdate = useCallback(async () => { \n        try {\n            if (!currentNetworkName) {\n                return;\n            }\n            const leaderboardNetworkName = getLeaderboardNetworkNameFromNetworkName(currentNetworkName)\n            const response = await axios.get(getLeaderboardPath(leaderboardNetworkName))\n            const result = response.data\n            const playersWithRank = result.map(assignRank).filter(isScoreNonZero).map(assignAlias)\n            setPlayersWithRank(playersWithRank)\n            setSearchResult(playersWithRank)\n        } catch (err) { \n            console.log(\"Failed to fetch leaderboard\")\n        }\n    }, [currentNetworkName])\n\n    // When network changes\n    useEffect(() => { \n        fetchAndUpdate()\n    }, [fetchAndUpdate])\n\n    const getLeaderboardNetworkNameFromNetworkName = (networkName) => {\n        const networks = Object.entries(NETWORKS)\n        const network = networks.find(network => network[1]?.name === networkName)\n        const leaderboardNetworkName = network[0].toLowerCase().split(\"_\")[0]\n        return capitaliseFirstLetter(leaderboardNetworkName);\n    }\n\n    const handlePageClick = (event) => {\n        const newOffset = (event.selected * playersPerPage) % searchResult.length;\n        setOffset(newOffset);\n    };\n \n    const isKeywordMatching = (keyword) => (player) => {\n        keyword = keyword.toLowerCase()\n        return (\n            player.player.toLowerCase().includes(keyword) ||\n            player.alias.toLowerCase().includes(keyword)\n        )\n    }\n\n    const updateSearchResult = (keyword) => {\n        if (keyword === \"\") { \n            setSearchResult(playersWithRank)\n            return;\n        }\n        setSearchKeyword(keyword)\n        const result = playersWithRank.filter(isKeywordMatching(keyword))\n        setSearchResult(result)\n        setOffset(0)\n    }\n\n    return (\n        <main className=\"boxes\">\n            <div className='leaderboard-body'>\n                    <div className=\"leaderboard-heading\">\n                        <div className=\"leaderboard-title\">Leaderboard</div>\n                        <Search\n                            searchKeyword={searchKeyword}\n                            onKeywordChange={updateSearchResult}\n                        />\n                    </div>\n                    <Headers />\n                    <div className='leaderboard-list-container'>\n                        <LeaderList players={currentItems} />\n                    </div>\n                    <div className='leaderboard-outer-container'>\n                        <ReactPaginate\n                            onPageChange={handlePageClick}\n                            pageCount={pageCount}\n                            {...reactPaginateProps}\n                        />\n                    </div>\n                </div>\n            <Footer />\n        </main>\n    )\n}\n\nconst reactPaginateProps = {\n    pageRangeDisplayed: 5,\n    renderOnZeroPageCount:null,\n    breakLabel:\"...\",\n    nextLabel: <i className=\"fa-sharp fa-solid fa-arrow-right\"></i>,\n    previousLabel: <i className=\"fa-sharp fa-solid fa-arrow-left\"></i>,\n    containerClassName:\"leaderboard-pagination-container\",\n    pageLinkClassName:\"leaderboard-pagination-page-item\",\n    activeLinkClassName:\"leaderboard-pagination-selected-page-item\",\n    nextLinkClassName:\"leaderboard-button-link\",\n    previousLinkClassName:\"leaderboard-button-link\"\n}\n\nconst assignRank = ((item, index) => { \n    return {\n        ...item,\n        rank:index+1\n    }\n}) \n\nconst assignAlias = (player) => {\n    const alias = aliases[player.player.toLowerCase()]\n    if(!alias) return player\n    return {\n        ...player,\n        alias:alias\n    }\n}\n\nconst isScoreNonZero = (player) => { \n    return player.score !== 0\n}\n\nconst capitaliseFirstLetter = (string) => { \n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport default Leaderboard;","import React, { Suspense, lazy } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { store, history } from \"./store\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport * as ethutil from \"./utils/ethutil\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles/app.css\";\nimport * as actions from \"../src/actions\";\nimport * as constants from \"../src/constants\";\nimport \"./utils/^^\";\nimport * as Sentry from \"@sentry/browser\";\nimport { Integrations } from \"@sentry/tracing\";\nimport App from \"./containers/App\";\nimport NotFound404 from \"./components/not-found/NotFound404\";\nimport Header from \"./containers/Header\";\nimport Leaderboard from \"./containers/Leaderboard\";\n\n// For bundle splitting without lazy loading.\nconst nonlazy = (component) => lazy(() => component);\n\nconst Level = nonlazy(import(\"./containers/Level\"));\nconst Help = nonlazy(import(\"./containers/Help\"));\nconst Stats = nonlazy(import(\"./containers/Stats\"));\n\nSentry.init({\n  dsn: constants.SENTRY_DSN,\n  debug: false,\n  tunnel: \"/errors\",\n  integrations: [new Integrations.BrowserTracing()],\n  tracesSampleRate: 1.0,\n  release: constants.VERSION,\n});\n// store.dispatch(actions.setNetworkId(id));\nstore.dispatch(actions.connectWeb3(window.ethereum));\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nif (!window.ethereum) {\n  //root.render(<h3>Hey, You dont have the supported wallet!</h3>);\n  // let language = localStorage.getItem(\"lang\");\n  // let strings = loadTranslations(language);\n  // store.dispatch(actions.setNetworkId(parseInt(\"5\")));\n  store.dispatch(actions.loadGamedata());\n} else {\n  window.ethereum.request({ method: \"eth_chainId\" }).then((res) => {\n    store.dispatch(actions.setNetworkId(parseInt(res)));\n    store.dispatch(actions.loadGamedata());\n  })  \n}\n\nroot.render(\n  <Provider store={store}>\n    <Router history={syncHistoryWithStore(history, store)}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Header>\n          \n        </Header>\n        <Routes>\n          <Route path={constants.PATH_HELP} element={<Help />} />\n          <Route path={constants.PATH_LEVEL} element={<Level />} />\n          <Route path={constants.PATH_STATS} element={<Stats />} />\n          <Route path={constants.PATH_LEADERBOARD} element={<Leaderboard />} />\n          <Route exact path=\"/\" element={<App />} />\n          <Route path=\"/\" element={<NotFound404 />} />\n        </Routes>\n      </Suspense>\n    </Router>\n  </Provider>\n);\n\n// Post-load actions.\nwindow.addEventListener(\"load\", async () => {\n  if (window.ethereum) {\n    window.web3 = new constants.Web3(window.ethereum);\n    try {\n      await window.ethereum.request({ method: `eth_requestAccounts` });\n    } catch (error) {\n      console.error(error);\n      console.error(`Refresh the page to approve/reject again`);\n      window.web3 = null;\n    }\n  }\n\n  if (window.web3) {\n    ethutil.setWeb3(window.web3);\n    ethutil.attachLogger();\n\n    // Initial web3 related actions\n    store.dispatch(actions.connectWeb3(window.web3));\n    window.web3.eth.getAccounts(function (error, accounts) {\n      let player;\n      if (accounts.length !== 0 && !error) player = accounts[0];\n      store.dispatch(actions.setPlayerAddress(player));\n      store.dispatch(actions.loadEthernautContract());\n      ethutil.watchAccountChanges((acct) => {\n        store.dispatch(actions.setPlayerAddress(acct));\n      }, player);\n      ethutil.watchNetwork({\n        gasPrice: (price) =>\n          store.dispatch(actions.setGasPrice(Math.floor(price * 1.1))),\n        networkId: (id) => {\n          // checkWrongNetwork(id);\n          if (id !== store.getState().network.networkId)\n            store.dispatch(actions.setNetworkId(id));\n        },\n        blockNum: (num) => {\n          if (num !== store.getState().network.blockNum)\n            store.dispatch(actions.setBlockNum(num));\n        },\n      });\n    });\n  }\n});\n\n// function checkWrongNetwork(id) {\n//   let onWrongNetwork = false;\n//   if (constants.ACTIVE_NETWORK.id === constants.NETWORKS.LOCAL.id) {\n//     onWrongNetwork = Number(id) < 1000;\n//   } else {\n//     onWrongNetwork =  !constants.ACTIVE_NETWORK.includes(Number(id)) ;\n//   }\n\n//   if (onWrongNetwork) {\n//     console.error(\n//       `Heads up, you're on the wrong network!! @bad Please switch to the << ${constants.ACTIVE_NETWORK.name.toUpperCase()} >> network.`\n//     );\n//     console.error(\n//       `1) From November 2 you can turn on privacy mode (off by default) in settings if you don't want to expose your info by default. 2) If privacy mode is turn on you have to authorized metamask to use this page. 3) then refresh.`\n//     );\n\n//     if (id === constants.NETWORKS.ROPSTEN.id) {\n//       console.error(\n//         `If you want to play on Ropsten, check out https://ropsten.ethernaut.openzeppelin.com/`\n//       );\n//     }\n//   }\n\n//   return onWrongNetwork;\n// }\n","import * as actions from '../actions';\nimport * as constants from '../constants';\nimport { deployRemainingContracts, isLocalDeployed } from '../utils/contractutil';\nimport { deployAdminContracts } from '../utils/deploycontract';\n\nlet elements = document.querySelectorAll('.progress-bar-wrapper');\n\n// let wasOnWrongNetwork = false\n\n// -- Get the localstorage key then fetch the corresponding value,\n// -- IF This is a network supported by default OR there is a localstorage key indicating contracts have been locally deployed THEN continue as normal\n// -- ELSE notify the user that they need to deploy on this network to play the game or switch to a network that has the game, then run deployment script and set returned addresses to localstorage\nconst setNetwork = store => next => action => {\n  window.localdeploy = deployAdminContracts; //TODO later remove refrence to contract from windows\n  window.deployAllContracts = deployRemainingContracts;\n  if (action.type !== actions.SET_NETWORK_ID) return next(action) //we need to reload the window here\n  elements = document.querySelectorAll('.progress-bar-wrapper');\n  const hasBeenLocalDeployed = isLocalDeployed(action.id);\n\n  if (!onPredeployedNetwork(action.id) && !hasBeenLocalDeployed) {\n    const deployWindow = document.querySelectorAll('.deploy-window-bg');\n    if (deployWindow[0]) deployWindow[0].style.display = 'block';\n  }\n\n  //This will trigger reload if the network is changed \n  if (store.getState().network.networkId !== undefined && store.getState().network.networkId !== action.id) {\n    elements[0].style.display = 'flex';\n    document.location.replace(`${document.location.origin}${document.location.pathname.indexOf('level') > 0 ? '' : document.location.pathname}`)\n    return;\n  }\n\n  next(action)\n}\n\nexport function onPredeployedNetwork(id) {\n  let onRightNetwork = false;\n  let allNetworkIds = Object.keys(constants.ID_TO_NETWORK).filter(id => constants.ID_TO_NETWORK[id] !== constants.NETWORKS.LOCAL.name).map((key) => Number(key))\n  onRightNetwork = allNetworkIds.includes(Number(id));\n  return onRightNetwork;\n}\n\n\nexport default setNetwork\n","export const svgFilter = () => {\n    // Source for the CSS filter:\n    // https://codepen.io/sosuke/pen/Pjoqqp?__cf_chl_jschl_tk__=ecc0b72797ae71bc009d6322e3e470773936b386-1604211766-0-ASpz720gXnc6Ej0vzlgY9-KLmlPkldgcOx1wAmGTUCjLZLOxkArNxpRzZ9m8woL-NGmP9LBGVPws8UxMJZrR7O1qFH6QkKtrGVPw6StRnXiK1XTQR_nY905r0XobAG2nOmyC6Zq8mdyPDp1MyHD7JLodJUXCRViXhtmLmRVE_-JGarVJRlxs6k3DzAOQQEJewfp00DjhlD0mxr8ZKpk2yq6IPTZZQ52XYxh26FC5MxLHhs7LuAwhtolmDZyp4_IuwRg8I5m-2--MmvGE8CCqjRWrkE85zgkMXPlOqcZtppRpZhn6Uz9DZAuKheHwVBb0ySIhFYG92bvQOgiKX0TTswB1SHgOLIeqktuyUaAgxI_h\n    // The tool has been used to pass from --secondary-color to --primary-color through CSS filters\n    // This is because SVGs embedded into <img> tags can't be filled as we can do with inline SVGs\n    return \"invert(92%) sepia(17%) saturate(168%) hue-rotate(337deg) brightness(98%) contrast(89%)\";\n}","import React from \"react\";\nimport { loadTranslations } from \"../../utils/translations\";\nimport { connect } from \"react-redux\";\nimport { contractsDeploymentStatus, raiseIssue, deployStatus } from \"../../utils/contractutil\";\n\nexport const Footer = (props) => {\n    let language = localStorage.getItem(\"lang\");\n    const strings = loadTranslations(language);\n    const deploymentStatus = contractsDeploymentStatus(props.network.networkId);\n\n    return (deploymentStatus === deployStatus.ALL_DEPLOYED ?\n        <footer\n            className=\"deploy-footer\"\n            dangerouslySetInnerHTML={{ __html: strings.submitGameFooter }}\n            onClick={raiseIssue}\n        ></footer>\n        : (\n            deploymentStatus === deployStatus.CORE_DEPLOYED ?\n                <footer\n                    className=\"footer\"\n                    dangerouslySetInnerHTML={{ __html: strings.submitLevelFooter }}\n                ></footer>\n                :\n                <footer\n                    className=\"footer\"\n                    dangerouslySetInnerHTML={{ __html: strings.footer }}\n                ></footer>\n        )\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        network: state.network,\n    };\n}\n\n\nexport default connect(mapStateToProps)(Footer);","export const CONNECT_WEB3 = \"CONNECT_WEB3\";\nexport const connectWeb3 = web3 => ({ type: CONNECT_WEB3, web3 })\n\nexport const SET_GAS_PRICE = \"SET_GAS_PRICE\";\nexport const setGasPrice = gasPrice => ({ type: SET_GAS_PRICE, gasPrice })\n\nexport const SET_NETWORK_ID = \"SET_NETWORK_ID\";\nexport const setNetworkId = id => ({ type: SET_NETWORK_ID, id })\n\nexport const SET_PLAYER_ADDRESS = \"SET_PLAYER_ADDRESS\";\nexport const setPlayerAddress = address => ({ type: SET_PLAYER_ADDRESS, address })\n\nexport const LOAD_GAME_DATA = \"LOAD_GAME_DATA\";\nexport const loadGamedata = () => ({ type: LOAD_GAME_DATA, levels: undefined })\n\nexport const LOAD_ETHERNAUT_CONTRACT = \"LOAD_ETHERNAUT_CONTRACT\";\nexport const loadEthernautContract = () => ({ type: LOAD_ETHERNAUT_CONTRACT, contract: undefined })\n\nexport const ACTIVATE_LEVEL = \"ACTIVATE_LEVEL\";\nexport const activateLevel = address => ({ type: ACTIVATE_LEVEL, address })\n\nexport const DEACTIVATE_LEVEL = \"DEACTIVATE_LEVEL\";\nexport const deactivateLevel = level => ({ type: DEACTIVATE_LEVEL, level })\n\nexport const LOAD_LEVEL_INSTANCE = \"LOAD_LEVEL_INSTANCE\";\nexport const loadLevelInstance = (level, reuse, reset) => ({ type: LOAD_LEVEL_INSTANCE, level, reuse, instance: undefined, reset })\n\nexport const SUBMIT_LEVEL_INSTANCE = \"SUBMIT_LEVEL_INSTANCE\";\nexport const submitLevelInstance = (level, completed) => ({ type: SUBMIT_LEVEL_INSTANCE, level, completed })\n\nexport const SYNC_PLAYER_PROGRESS = \"SYNC_PLAYER_PROGRESS\";\nexport const syncPlayerProgress = () => ({ type: SYNC_PLAYER_PROGRESS })\n\nexport const COLLECT_STATS = \"COLLECT_STATS\";\nexport const collectStats = () => ({ type: COLLECT_STATS })\n\nexport const SET_BLOCK_NUM = \"SET_BLOCK_NUM\";\nexport const setBlockNum = num => ({ type: SET_BLOCK_NUM, blockNum: num })\n\nexport const SET_LANG = \"SET_LANG\";\nexport const setLang = (lang) => ({ type: SET_LANG, lang }) \n\nexport const CLEAR_SOLVED_LEVELS = \"CLEAR_SOLVED_LEVELS\";\nexport const clearSolvedLevels = () => ({ type: CLEAR_SOLVED_LEVELS }) \n\nexport const CHECK_ALL_COMPLETED = \"CHECK_ALL_COMPLETED\";\nexport const checkAllLevelsCompleted = allCompleted => ({ type: CHECK_ALL_COMPLETED, allCompleted })\n\nexport const REGISTER = \"REGISTER\";\nexport const register = (nickname, telegram) => ({ type: REGISTER, nickname, telegram })\n\n// export const SET_PLAYER_NICKNAME = \"SET_PLAYER_NICKNAME\";\n// export const setPlayerNickname = (address, nickname) => ({ type: SET_PLAYER_NICKNAME, nickname })\n\n","import dotenv from \"dotenv\";\nimport pkgWeb3 from \"web3\";\n\ndotenv.config();\n\nexport const DEBUG = process.env.NODE_ENV !== \"production\";\nexport const DEBUG_REDUX = DEBUG;\nexport const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n\n// Networks for operations\nexport const NETWORKS = {\n  UNDEFINED: undefined,\n  LOCAL: {\n    name: \"local\",\n    id: \"1337\",\n    url: \"http://localhost\",\n    port: 8545,\n  },\n  MUMBAI: {\n    name: \"mumbai-polygon\",\n    id: \"80001\",\n    url: `${process.env.MUMBAI_HOST}`,\n    privKey: `${process.env.PRIV_KEY}`,\n  },\n};\n\n// Networks for operations\nexport const NETWORKS_INGAME = {\n  UNDEFINED: undefined,\n  LOCAL: {\n    name: \"local\",\n    id: \"1337\",\n    url: \"http://localhost\",\n    port: 8545,\n  },\n  MUMBAI: {\n    name: \"mumbai-polygon\",\n    id: \"80001\",\n    currencyName: \"Mumbai-Matic\",\n    currencySymbol: \"MATIC\",\n    rpcUrl: `https://matic-mumbai.chainstacklabs.com`,\n    blockExplorer: \"https://mumbai.polygonscan.com\",\n    explorer: {\n      apiKey: `${process.env.REACT_APP_MUMBAI_EXPLORER_API_KEY}`,\n      apiHost: `https://api-testnet.polygonscan.com`,\n    },\n  },\n};\n\n// Web3\nexport const Web3 = pkgWeb3;\n\n// Misc\nexport const CLEAR_CONSOLE = !DEBUG;\nexport const GOOGLE_ANALYTICS_ID = \"UA-85043059-4\";\n\n// Owner addresses\nexport const ADDRESSES = {\n  [NETWORKS.LOCAL.name]: undefined,\n  [NETWORKS.MUMBAI.name]: \"0xFd07850DF7036ba07eFB2De6229460e7E1c82355\",\n};\n\n// Support EIP-1559\nexport const SUPPORTS_EIP_1559 = [\n  '5', // NETWORKS.GOERLI.id\n  '80001', // NETWORKS.MUMBAI.id\n]\n\n// Core contract keys\nexport const CORE_CONTRACT_NAMES = [\n  \"ethernaut\",\n  \"proxyAdmin\",\n  \"implementation\",\n  \"proxyStats\",\n];\n\n// Storage\nexport const VERSION = \"0.1.0\";\nexport const STORAGE_PLAYER_DATA_KEY = `ethernaut_player_data_${VERSION}_`;\nexport const STORAGE_CONTRACT_DATA_KEY = `ethernaut_contract_data_`;\n\n// Paths\nexport const PATH_ROOT = \"/\";\nexport const PATH_NOT_FOUND = \"/404\";\nexport const PATH_HELP = \"/help\";\nexport const PATH_LEVEL_ROOT = `${PATH_ROOT}level/`;\nexport const PATH_LEVEL = `${PATH_LEVEL_ROOT}:address`;\nexport const PATH_STATS = `${PATH_ROOT}stats`;\nexport const PATH_LEADERBOARD = `${PATH_ROOT}leaderboard`\n\n// RELEASE SENSITIVE\n// -----------------------------------------------------------------------------------------\n// -----------------------------------------------------------------------------------------\nexport const CUSTOM_LOGGING = true; /* TRUE on production */\nexport const SHOW_ALL_COMPLETE_DESCRIPTIONS = false; /* FALSE on production */\nexport const SHOW_VERSION = true;\n\n// export const ACTIVE_NETWORK = NETWORKS.SEPOLIA\n// export const ACTIVE_NETWORK = NETWORKS.GOERLI\n export const ACTIVE_NETWORK = NETWORKS.MUMBAI\n// export const ACTIVE_NETWORK = NETWORKS.OPTIMISM_GOERLI\n// export const ACTIVE_NETWORK = NETWORKS.ARBITRUM_GOERLI\n// export const ACTIVE_NETWORK = NETWORKS.LOCAL;\n\nlet id_to_network = {};\nObject.keys(NETWORKS)\n  .filter(\n    (network) => NETWORKS[network] /*&& NETWORKS[network].name !== 'local'*/\n  )\n  .forEach(\n    (network) => (id_to_network[NETWORKS[network].id] = NETWORKS[network].name)\n  );\n\nexport const ID_TO_NETWORK = id_to_network;\n// -----------------------------------------------------------------------------------------\n// -----------------------------------------------------------------------------------------\n\nexport const ALIAS_PATH = \"https://raw.githubusercontent.com/OpenZeppelin/ethernaut-leaderboard/update/boards/aliases.json\"\n\nexport const getLeaderboardPath = (network) => {\n  return `https://raw.githubusercontent.com/AndreiBachurin/ETH_hack_Leaderboard/update/boards/networkleaderboards/${network}LeaderBoard.json`\n}","import { onPredeployedNetwork } from \"../middlewares/setNetwork\";\nimport { getLevelKey, restoreContract } from \"./contractutil\";\n\nvar levels = require(`../gamedata/gamedata.json`).levels;\n\n\nexport const getLevelDetailsByAddress = (levelAddress, chainId) => {\n    const constants = require(\"../constants\");\n    const allLevels = require(\"client/src/gamedata/gamedata.json\").levels;\n    // If we are on a predeployed chain, fetch address from constants\n    const gamedata = onPredeployedNetwork(chainId)\n    ? require(`client/src/gamedata/deploy.${constants.ID_TO_NETWORK[chainId]}.json`)\n    : restoreContract(\"77\");\n    // If we are not fetch from localstorage\n    // based on the index fetch the level name and difficulty\n    const addressToId = Object.fromEntries(\n      Object.entries(gamedata).map((a) => a.reverse())\n    );\n    const levelId = addressToId[levelAddress];\n    const currentLevel = allLevels[levelId];\n    // include the difficulty circles to give more context\n    const difficultyCircles = drawDifficultyCircle(currentLevel?.difficulty)\n    return {...currentLevel, difficultyCircles};\n};\n\nexport const drawDifficultyCircle = (levelDifficulty) => {\n    //Put as many ● as difficulty/2 (scaled from 10 to 5) and ○ as the rest up to 5\n    var numberOfFullCircles = Math.ceil(levelDifficulty / 2);\n    var numberOfEmptyCircles = 5 - numberOfFullCircles;\n    var emptyCircle = \"○\";\n    var fullCircle = \"●\";\n    var difficulty = \"\";\n    for (var j = 0; j < numberOfFullCircles; j++) {\n      difficulty += fullCircle;\n    }\n  \n    for (var k = 0; k < numberOfEmptyCircles; k++) {\n      difficulty += emptyCircle;\n    }\n\n    return difficulty;\n};\n\nconst getlevelsdata = (props, source) => {\n    var levelData = [];\n    let linkStyle = {};\n    let levelComplete;\n    let selectedIndex;\n\n    for (var i = 0; i < levels.length; i++) {\n        var difficulty = drawDifficultyCircle(levels[i].difficulty);\n\n        if (props?.activeLevel) {\n            const key = getLevelKey(props.params?.address);\n            if (props.activeLevel[key] === levels[i][key]) {\n                linkStyle.textDecoration = 'underline'\n                selectedIndex = i;\n            }\n        }\n\n        // Level completed\n        levelComplete = props.player?.completedLevels[levels[i].deployedAddress] > 0\n\n        var isMissingSVGImage;\n        var isMissingPNGImage;\n\n        try {\n            isMissingSVGImage = require(`../../public/imgs/Level${levels[i].deployId}.webm`) ? false : true;\n        } catch (error) {\n            isMissingSVGImage = true;\n        }\n        try {\n            isMissingPNGImage = require(`../../public/imgs/Level${levels[i].deployId}.png`) ? false : true;\n        } catch (error) {\n            isMissingPNGImage = true;\n        }\n        var object = {\n            name: levels[i].name,\n            src: isMissingSVGImage && isMissingPNGImage ? (\n                source !== 'mosaic' ?\n                    `../../imgs/BigDefault.svg` :\n                    `../../imgs/Default.svg`\n            ) : (\n                isMissingPNGImage ? (\n                    source !== 'mosaic' ?\n                    `../../imgs/BigLevel${levels[i].deployId}.webm` :\n                    `../../imgs/Level${levels[i].deployId}.webm`\n                ) : (\n                    source !== 'mosaic' ?\n                    `../../imgs/BigLevel${levels[i].deployId}.png` :\n                    `../../imgs/Level${levels[i].deployId}.png`\n                )\n                \n            ),\n            difficulty: difficulty,\n            deployedAddress: levels[i].deployedAddress,\n            completed: levelComplete,\n            id: levels[i].deployId,\n            creationDate: levels[i].created\n        }\n\n        levelData.push(object);\n    }\n\n    return [levelData, levelData[selectedIndex]];\n}\n\nexport default getlevelsdata\n","import { useLocation, useNavigate, useParams } from \"react-router\";\n\nexport const withRouter = (Component) => {\n    const Wrapper = (props) =>{\n        const navigate = useNavigate();\n        const params = useParams();\n        const location = useLocation();\n\n        return (\n            <Component\n                params={params}\n                navigate={navigate}\n                location={location}\n                {...props}\n            />\n        )\n    } \n    return Wrapper;\n}","import { getTruffleContract } from './ethutil';\nimport { getDeployData } from './deploycontract';\nimport Web3 from 'web3';\nimport { getLevelDetailsByAddress } from './getlevelsdata';\n\nexport const getLevelsSolvedByPlayer = async (playerAddress, networkId) => {\n    if (!(playerAddress || networkId)) {\n        return;\n    }\n\n    const levelAddresses = getLevelAddressesInNetwork(networkId)\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress, playerAddress)\n    const listOfLevelsSolved = await getListOfLevelsSolvedByPlayer(statsContract, levelAddresses, playerAddress, 5)\n    const levelDetails = listOfLevelsSolved.map(oneLevel => {\n        return getLevelDetailsByAddress(oneLevel, networkId);\n    });\n\n    return levelDetails\n}\n\nexport const getPercentageOfLevelsSolvedByPlayer = async (playerAddress, networkId) => {\n    if (!(playerAddress || networkId)) {\n        return\n    }\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress, playerAddress)\n    return await getPercentageOfLevelsSolved(statsContract, playerAddress)\n}\n\nexport const getTotalPlayers = async (networkId) => {\n    if (!networkId) {\n        return\n    }\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress)\n    return await getTotalNumberOfPlayers(statsContract)\n}\n\nexport const getTotalFailures = async (networkId) => {\n    if (!networkId) {\n        return\n    }\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress)\n    return await getFailedSubmissions(statsContract)\n}\n\nexport const getTotalCompleted = async (networkId) => {\n    if (!networkId) {\n        return\n    }\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress)\n    return await getCompletedLevels(statsContract)\n}\n\nexport const getTotalCreated = async (networkId) => {\n    if (!networkId) {\n        return\n    }\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress)\n    return await getLevelsCreated(statsContract)\n}\n\nexport const checkIfPlayerExist = async (playerAddress, networkId) => {\n    if (!(playerAddress || networkId)) {\n        return\n    }\n    const proxyStatsAddress = getProxyStatsContractAddressInNetwork(networkId)\n    const statsContract = await getStatsContract(proxyStatsAddress, playerAddress)\n    return await statsContract.doesPlayerExist(playerAddress)\n}\n\nconst getPercentageOfLevelsSolved = async (statsContract, playerAddress) => {\n    const response = await statsContract.getPercentageOfLevelsCompleted(playerAddress)\n    const roundedPercentage = (Web3.utils.fromWei(response.toString()) * 100).toFixed(2)\n    return roundedPercentage\n}\n\nconst getTotalNumberOfPlayers = async (statsContract) => {\n    const response = await statsContract.getTotalNoOfPlayers()\n    return response\n}\n\nconst getFailedSubmissions = async (statsContract) => {\n    const response = await statsContract.getTotalNoOfFailedSubmissions()\n    return response\n}\n\nconst getCompletedLevels = async (statsContract) => {\n    const response = await statsContract.getTotalNoOfLevelInstancesCompleted()\n    return response\n}\n\nconst getLevelsCreated = async (statsContract) => {\n    const response = await statsContract.getTotalNoOfLevelInstancesCreated()\n    return response\n}\n\n\nconst getListOfLevelsSolvedByPlayer = async (statsContract, levelAddresses, playerAddress, noOfQueriesAtAtime) => {\n    const isLevelSolvedRequestsList = getIsLevelSolvedRequestsList(statsContract, levelAddresses, playerAddress)\n    const isLevelSolvedRequestsListChunked = chunk(isLevelSolvedRequestsList, noOfQueriesAtAtime)\n    let isLevelSolvedList = []\n    for (let i = 0; i < isLevelSolvedRequestsListChunked.length; i++) {\n        const result = await Promise.all(isLevelSolvedRequestsListChunked[i])\n        isLevelSolvedList.push(...result)\n    }\n    return getListOfSolvedLevels(isLevelSolvedList)\n}\n\nconst getListOfSolvedLevels = (isLevelSolvedList) => {\n    const listOfSolvedLevels = isLevelSolvedList\n        .filter(item => item.isSolved)\n        .map(item => item.levelAddress)\n    return listOfSolvedLevels\n}\n\nconst chunk = (list, chunkSize) => {\n    let chunkedList = [...Array(Math.ceil(list.length / chunkSize))].map(_ => list.splice(0, chunkSize))\n    return chunkedList\n}\n\nconst getIsLevelSolvedRequestsList = (statsContract, levelAddresses, playerAddress) => {\n    const levelNos = Object.keys(levelAddresses);\n    const listOfIsLevelSolvedRequests = []\n    for (let levelNo of levelNos) {\n        listOfIsLevelSolvedRequests.push(isLevelSolvedByPlayer(statsContract, levelAddresses[levelNo], playerAddress))\n    }\n    return listOfIsLevelSolvedRequests;\n}\n\nconst isLevelSolvedByPlayer = async (statsContract, levelAddress, playerAddress) => {\n    const isSolved = await statsContract.isLevelCompleted(playerAddress, levelAddress)\n    return {\n        levelAddress,\n        isSolved,\n    };\n}\n\nconst getLevelAddressesInNetwork = (networkId) => {\n    const deployedNetworkData = getDeployData(networkId);\n    const keys = Object.keys(deployedNetworkData);\n    const levelAddresses = {}\n    for (let key of keys) {\n        if (!isNaN(Number(key))) {\n            levelAddresses[key] = deployedNetworkData[key];\n        }\n    }\n    return levelAddresses;\n}\n\nconst getProxyStatsContractAddressInNetwork = (networkId) => {\n    const deployedNetworkData = getDeployData(networkId);\n    return deployedNetworkData['proxyStats'];\n}\n\nconst getStatsContract = async (proxyStatsAddress, playerAddress) => {\n    const statsABI = require(\"contracts/build/contracts/metrics/Statistics.sol/Statistics.json\");\n    let statsContract;\n    if (playerAddress) {\n        statsContract = getTruffleContract(statsABI, { from: playerAddress });\n    } else { \n        statsContract = getTruffleContract(statsABI);\n    }\n    const statsContractInstance = await statsContract.at(proxyStatsAddress)\n    return statsContractInstance;\n}","import * as ethjs from 'ethereumjs-util';\nimport TruffleContract from '@truffle/contract';\nimport * as constants from \"../constants.js\";\nimport { NETWORKS_INGAME } from '../constants.js'\n\nlet web3;\nlet duplicateTransactions = new Map();\n\nexport const setWeb3 = (_web3) => {\n  web3 = _web3;\n}\n\nexport const getWeb3 = () => web3;\n\nexport const getTruffleContract = (jsonABI, defaults = {}) => {\n  // // HACK: Doing this here instead of `import` so that the project uses the web3.js version\n  // // defined in `package.json` instead of relying on Truffle dependencies (that use an old version).\n  // // With this, MetaMask v9 deprecation warnings are removed. \n  // const TruffleContract = require('@truffle/contract');\n\n  const truffleContract = TruffleContract(jsonABI);\n  if (!defaults.gasPrice) defaults.gasPrice = 2000000000;\n  if (!defaults.gas) defaults.gas = 2000000;\n  truffleContract.defaults(defaults);\n  truffleContract.setProvider(web3.currentProvider);\n  return truffleContract;\n}\n\nexport const getBalance = (address) => {\n  return new Promise(function (resolve, reject) {\n    web3.eth.getBalance(address, function (error, result) {\n      if (error) reject(error)\n      else resolve(web3.utils.fromWei(result, 'ether'))\n    })\n  })\n}\n\nexport const getBlockNumber = () => {\n  return new Promise((resolve, reject) => {\n    web3.eth.getBlockNumber((err, blockNumber) => {\n      if (err) reject(err)\n      resolve(blockNumber);\n    });\n  });\n}\n\nexport const sendTransaction = (options) => {\n  return new Promise((resolve, reject) => {\n    web3.eth.sendTransaction(options, (err, res) => {\n      if (err) reject(err)\n      else resolve(res)\n    })\n  })\n}\n\nexport const getNetworkId = () => {\n  return new Promise((resolve, reject) => {\n    web3.eth.net.getId((err, netId) => {\n      if (err) reject();\n      else resolve(netId);\n    });\n  });\n}\n\nexport const toWei = (ether) => {\n  return web3.utils.toWei(ether, 'ether')\n}\n\nexport const fromWei = (wei) => {\n  return web3.utils.fromWei(wei, 'ether')\n}\n\nexport const watchAccountChanges = (callback, lastKnownAccount) => {\n  let interval = setInterval(function () {\n    web3.eth.getAccounts(function (error, accounts) {\n      if (error) return console.log(error)\n      const newAccount = accounts[0]\n      if (newAccount !== lastKnownAccount) {\n        callback(newAccount)\n        clearInterval(interval)\n        this.watchAccountChanges(callback, newAccount);\n      }\n    })\n  }, 1000)\n}\n\nexport const watchNetwork = (callbacks) => {\n\n  // Gas price\n  if (callbacks.gasPrice) {\n    const gasPrice = function () {\n      web3.eth.getGasPrice(function (error, result) {\n        if (error) return console.log(error)\n        callbacks.gasPrice(result)\n      })\n    }\n    gasPrice()\n    setInterval(gasPrice, 30 * 60000)\n  }\n\n  // Network id\n  if (callbacks.networkId) {\n    const netId = function () {\n      web3.eth.net.getId(function (error, result) {\n        if (error) return console.log(error)\n        callbacks.networkId(result)\n      })\n    }\n    netId()\n    setInterval(netId, 5 * 1000)\n  }\n\n  // Block num\n  if (callbacks.blockNum) {\n    const blockNum = function () {\n      web3.eth.getBlockNumber((err, blockNumber) => {\n        if (err) console.log(err)\n        callbacks.blockNum(blockNumber);\n      });\n    }\n    blockNum()\n    setInterval(blockNum, 10 * 1000)\n  }\n\n}\n\nexport const validateAddress = (address) => {\n  if (!address) return false;\n  if (address === '0x0000000000000000000000000000000000000000') return false;\n  if (address.substring(0, 2) !== \"0x\") return false;\n\n  // Basic validation: length, valid characters, etc\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) return false;\n\n  // Checksum validation.\n  const raw = address.replace('0x', '');\n  const allLowerCase = raw.toLowerCase() === raw;\n  const allUppercase = raw.toUpperCase() === raw;\n  if (allLowerCase || allUppercase) {\n    return true; // accepts addreses with no checksum data\n  }\n  else {\n    const checksum = ethjs.toChecksumAddress(address);\n    if (address !== checksum) return false;\n  }\n\n  return true;\n}\n\nexport const addressHasChecksum = (address) => {\n  if (!module.exports.isValidAddress(address)) return false;\n  const raw = address.replace('0x', '');\n  const allLowerCase = raw.toLowerCase() === raw;\n  const allUppercase = raw.toUpperCase() === raw;\n  return !(allLowerCase || allUppercase);\n}\n\nexport const verifySignature = (json) => {\n  try {\n    const messageHash = ethjs.hashPersonalMessage(ethjs.toBuffer(json.msg));\n    const signedMessageDecoded = ethjs.fromRpcSig(json.sig);\n    const recoveredPublicKey = ethjs.ecrecover(messageHash, signedMessageDecoded.v, signedMessageDecoded.r, signedMessageDecoded.s);\n    const recoveredAddressBuffer = ethjs.pubToAddress(recoveredPublicKey);\n    const recoveredAddress = ethjs.bufferToHex(recoveredAddressBuffer);\n    return json.address === recoveredAddress;\n  }\n  catch (err) {\n    return false;\n  }\n}\n\nexport const signMessageWithMetamask = (addr, message, callback) => {\n  const msg = ethjs.bufferToHex(new Buffer(message, 'utf8'));\n  web3.currentProvider.sendAsync({\n    method: 'personal_sign',\n    params: [msg, addr],\n    addr\n  }, function (err, res) {\n    callback({\n      address: addr,\n      msg: message,\n      sig: res.result,\n      version: '2'\n    });\n  });\n}\n\nexport const logger = (req, res, next, end) => {\n  next((cb) => {\n    // HACK: do not log known error when setting event log filters\n    if (res.error && !res.error.message.includes(\"TypeError: Cannot read property 'filter' of undefined\")) {\n      console.error('Error in RPC response:\\n', res.error.message);\n    } else if (req.method === 'eth_sendTransaction') {\n      console.mineInfo('Sent transaction', res.result);\n    } else if (req.method === 'eth_getTransactionReceipt' && res.result) {\n      if (duplicateTransactions.size > 1000) duplicateTransactions.clear()\n      if (!duplicateTransactions.get(res.result.transactionHash)) {\n        duplicateTransactions.set(res.result.transactionHash, true);\n        console.mineInfo('Mined transaction', res.result.transactionHash);\n      }\n    }\n    cb();\n  })\n}\n\nexport const attachLogger = () => {\n  if (web3.currentProvider._rpcEngine) {\n    web3.currentProvider._rpcEngine._middleware.unshift(logger);\n    return;\n  }  //If the current provider hasn't an RPC Engine look for other providers\n  else if (web3.currentProvider.providers) {\n    var providers = web3.currentProvider.providers;\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i]._rpcEngine) {\n        providers[i]._rpcEngine._middleware.unshift(logger);\n\n        // Set this provider as current provider\n        web3.currentProvider = providers[i];\n        return;\n      }\n    }\n  }\n\n  //If still there's no RPC Engine throw error\n  console.error(\"Can't find a valid provider, make sure you have Metamask installed and that any other wallet plugin is disabled\");\n  return;\n}\n\nexport const getGasFeeDetails = async (network, multiplier) => {\n  if (constants.SUPPORTS_EIP_1559.includes(network.networkId.toString())) {\n    const maxPriorityFeePerGas = network.web3.utils.toWei('2.5', 'gwei');\n    const block = await network.web3.eth.getBlock('latest')\n    const blockBaseFee = block.baseFeePerGas ? block.baseFeePerGas : 1;\n    return {\n      maxPriorityFeePerGas,\n      maxFeePerGas: multiplier * Number(blockBaseFee) + Number(maxPriorityFeePerGas)\n    }\n  } else {\n    const gasPrice = await network.web3.eth.getGasPrice()\n    return {\n      gasPrice: multiplier * gasPrice\n    }\n  }\n}\n\nexport const getNetworkFromId = (networkId) => {\n  const networkObjectsList = Object.values(NETWORKS_INGAME);\n  for (let network of networkObjectsList)\n    if (network && network.id === networkId.toString())\n      return network;\n}\n\nexport const getNetworkNamefromId = (networkId) => {\n  const network = getNetworkFromId(networkId);\n  return network.name\n}\n","var map = {\n\t\"./FindMe.sol/FindMe.dbg.json\": 1086,\n\t\"./FindMe.sol/FindMe.json\": 1087,\n\t\"./FindMeFactory.sol/FindMeFactory.dbg.json\": 1088,\n\t\"./FindMeFactory.sol/FindMeFactory.json\": 1089,\n\t\"./LendingPool.sol/IFlashLoanReceiver.dbg.json\": 1090,\n\t\"./LendingPool.sol/IFlashLoanReceiver.json\": 1091,\n\t\"./LendingPool.sol/LendingPool.dbg.json\": 1092,\n\t\"./LendingPool.sol/LendingPool.json\": 1093,\n\t\"./LendingPoolFactory.sol/LendingPoolFactory.dbg.json\": 1094,\n\t\"./LendingPoolFactory.sol/LendingPoolFactory.json\": 1095,\n\t\"./Lift.sol/House.dbg.json\": 1096,\n\t\"./Lift.sol/House.json\": 1097,\n\t\"./Lift.sol/Lift.dbg.json\": 1098,\n\t\"./Lift.sol/Lift.json\": 1099,\n\t\"./LiftFactory.sol/LiftFactory.dbg.json\": 1100,\n\t\"./LiftFactory.sol/LiftFactory.json\": 1101,\n\t\"./PredictTheFuture.sol/PredictTheFuture.dbg.json\": 1102,\n\t\"./PredictTheFuture.sol/PredictTheFuture.json\": 1103,\n\t\"./PredictTheFutureFactory.sol/PredictTheFutureFactory.dbg.json\": 1104,\n\t\"./PredictTheFutureFactory.sol/PredictTheFutureFactory.json\": 1105,\n\t\"./base/Level-05.sol/Level.dbg.json\": 1106,\n\t\"./base/Level-05.sol/Level.json\": 1107,\n\t\"./base/Level-06.sol/Level.dbg.json\": 1108,\n\t\"./base/Level-06.sol/Level.json\": 1109,\n\t\"./base/Level-08.sol/Level.dbg.json\": 1110,\n\t\"./base/Level-08.sol/Level.json\": 1111,\n\t\"./base/Level.sol/Level.dbg.json\": 1112,\n\t\"./base/Level.sol/Level.json\": 1113\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 505;","export const newGithubIssueUrl = (options = {}) => {\n    let repoUrl;\n    if (options.repoUrl) {\n        repoUrl = options.repoUrl;\n    } else if (options.user && options.repo) {\n        repoUrl = `https://github.com/${options.user}/${options.repo}`;\n    } else {\n        throw new Error('You need to specify either the `repoUrl` option or both the `user` and `repo` options');\n    }\n\n    const url = new URL(`${repoUrl}/issues/new`);\n\n    const types = [\n        'body',\n        'title',\n        'labels',\n        'template',\n        'milestone',\n        'assignee',\n        'projects',\n    ];\n\n    for (const type of types) {\n        let value = options[type];\n        if (value === undefined) {\n            continue;\n        }\n        if (type === 'labels' || type === 'projects') {\n            if (!Array.isArray(value)) {\n                throw new TypeError(`The \\`${type}\\` option should be an array`);\n            }\n            value = value.join(',');\n        }\n        url.searchParams.set(type, value);\n    }\n    return url.toString();\n}\n","import * as constants from \"../constants\";\nimport { getWeb3, setWeb3, getNetworkFromId } from \"./ethutil\";\nimport { newGithubIssueUrl } from \"./github\";\nimport { deployAdminContracts, deployAndRegisterLevel } from \"./deploycontract\";\nvar levels = require(`../gamedata/gamedata.json`).levels;\n\n\n// -- storage\nexport function cacheContract(data, chainId) {\n  const key = constants.STORAGE_CONTRACT_DATA_KEY + chainId;\n  // console.log(`CACHE CONTRACT`, key, data)\n  window.localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function restoreContract(chainId) {\n  const key = constants.STORAGE_CONTRACT_DATA_KEY + chainId;\n  const data = JSON.parse(window.localStorage.getItem(key));\n  // console.log(`RESTORE CONTRACT`, key, data)\n  return data || {};\n}\n\nexport function updateCachedContract(key, value, chainId) {\n  const data = restoreContract(chainId);\n  data[key] = value;\n  cacheContract(data, chainId);\n}\n\nexport function isLevelDeployed(levelDeployId, chainId) {\n  const gamedata = restoreContract(chainId);\n  return Boolean(gamedata[levelDeployId]);\n}\n// -- storage\n\n// -- Utils\n\nexport function getInjectedProvider() {\n  let web3Instance = window.web3;\n  if (window.ethereum) {\n    web3Instance = new constants.Web3(window.ethereum);\n  }\n  if (!getWeb3()) setWeb3(web3Instance);\n  return web3Instance;\n}\n\n// check the localstorage of the object containing address saved in localstorage\n// contains all the core contracts\nexport function isLocalDeployed(chainId) {\n  return constants.CORE_CONTRACT_NAMES.every(\n    (contractName) => restoreContract(chainId)[contractName]\n  );\n}\n\n// return the right key to use to query the level object\n// use address if factory is deployed\n// use deployId otherwise\nexport function getLevelKey(levelAddress) {\n  return constants.Web3.utils.isAddress(levelAddress)\n    ? \"deployedAddress\"\n    : \"deployId\";\n}\n\nexport function fetchLevelABI(level) {\n  const contractName = level.levelContract.split(\".\")[0];\n  return require(`contracts/build/contracts/levels/${level.levelContract}/${contractName}.json`);\n}\n\n// write windows finction to transfer ownership to a new user\nwindow.transferOwnerShip = async function (newOwnerAddress) {\n  console.log(`Transferring ownership of contracts to:${newOwnerAddress}`);\n  // -- fetch the required provider parameters\n  const web3 = getInjectedProvider();\n  const chainId = await web3.eth.getChainId();\n\n  // -- get the factory contract instance\n\n  //await localFactory.transferContractsOwnership(newOwnerAddress);\n  // -- update owner in storage\n  updateCachedContract(\"owner\", \"newOwnerAddress\", chainId);\n};\n\n// write helper function to load the contracts from localstorage for the current chain\nwindow.loadContracts = async function () {\n  const web3 = getInjectedProvider();\n  const chainId = await web3.eth.getChainId();\n  return restoreContract(chainId);\n};\n\n// write helper function to create a new issue, this function should only be called when all the levels have been deployed\nexport const raiseIssue = async () => {\n  const url = newGithubIssueUrl({\n    user: 'OpenZeppelin',\n    repo: 'ethernaut',\n    template: 'New-Network-Support.md',\n    title: 'New Network Support - [Network Name]',\n  });\n\n  window.open(url, '_blank').focus();\n}\n\n// statuses for the contracts deployment\nexport const deployStatus = {\n  DEFAULT: 'DEFAULT',\n  CORE_DEPLOYED: 'CORE_DEPLOYED',\n  ALL_DEPLOYED: 'ALL_DEPLOYED'\n}\n\n// function to check what contracts are deployed on the current network\nexport const contractsDeploymentStatus = (chainId) => {\n  if (!chainId)\n    return deployStatus.DEFAULT;\n\n  if (chainId in constants.ID_TO_NETWORK)\n    return deployStatus.DEFAULT;\n\n  const gamedata = restoreContract(chainId);\n  if (!gamedata)\n    return deployStatus.DEFAULT;\n\n  for (let contractName of constants.CORE_CONTRACT_NAMES) {\n    if (!gamedata[contractName]) {\n      return deployStatus.DEFAULT;\n    }\n  }\n\n  for (let level of levels) {\n    if (!gamedata[level.deployId]) {\n      return deployStatus.CORE_DEPLOYED;\n    }\n  }\n\n  return deployStatus.ALL_DEPLOYED;\n}\n\nexport const deployRemainingContracts = async () => {\n  const chainId = await window.web3.eth.getChainId();\n\n  try {\n    let gamedata = restoreContract(chainId);\n    if (!gamedata) {\n      const deployed = await deployAdminContracts();\n      if (!deployed) return;\n      gamedata = restoreContract(chainId);\n    }\n\n    for (let contractName of constants.CORE_CONTRACT_NAMES) {\n      if (!gamedata[contractName]) {\n        const deployed = await deployAdminContracts();\n        if (!deployed) return;\n        gamedata = restoreContract(chainId);\n        break;\n      }\n    }\n\n    for (let level of levels) {\n      if (!gamedata[level.deployId]) {\n        const deployed = await deployAndRegisterLevel(level);\n        if (!deployed) return;\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport const verifyContract = async (contractAddress, level, chainId) => {\n  const network = getNetworkFromId(chainId);\n  if (!network.explorer || !level.verificationDetails)\n    return;\n\n  const contractFile = await fetch(`contracts/levels/${level.instanceContract}`);\n  const contractCode = await contractFile.text();\n\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const urlencoded = new URLSearchParams();\n  urlencoded.append(\"apikey\", network.explorer.apiKey);\n  urlencoded.append(\"module\", \"contract\");\n  urlencoded.append(\"action\", \"verifysourcecode\");\n  urlencoded.append(\"sourceCode\", contractCode);\n  urlencoded.append(\"contractaddress\", contractAddress);\n  urlencoded.append(\"codeformat\", \"solidity-single-file\");\n  urlencoded.append(\"contractname\", level.verificationDetails.contractName);\n  urlencoded.append(\"compilerversion\", level.verificationDetails.compilerVersion);\n  urlencoded.append(\"optimizationUsed\", level.verificationDetails.optimization);\n  urlencoded.append(\"runs\", level.verificationDetails.runs);\n  urlencoded.append(\"constructorArguements\", level.verificationDetails.constructorArguements);\n  urlencoded.append(\"licenseType\", level.verificationDetails.licenseTypeId);\n\n  const requestOptions = {\n    method: 'POST',\n    headers: headers,\n    body: urlencoded,\n  };\n\n  try {\n    const response = await fetch(`${network.explorer.apiHost}/api`, requestOptions);\n    const result = await response.json();\n    if (result.status !== '1') {\n      throw new Error(result.result);\n    }\n  } catch (e) {\n    console.log('<< Game Instance Verification >>\\n', e);\n  }\n}\n\n// -- Utils\n","/** @type import('highlight.js') */\nconst hljs = require('highlight.js/lib/core');\n\nconst hljsDefineSolidity = require('highlightjs-solidity');\nhljsDefineSolidity(hljs);\n\nmodule.exports = hljs;\n","export function loadTranslations(language) {\n    let translations = null;\n    try { \n        translations = require(`../gamedata/${language}/strings.json`)\n      } catch(e){\n        translations = require(`../gamedata/en/strings.json`)\n        if(!translations) throw new Error(\"Can't load translations\")\n    }\n\n    return translations;\n}","import colors from \"colors\";\nimport * as ethutil from \"../utils/ethutil.js\";\nimport * as LocalFactoryABI from \"contracts/build/contracts/factory/LocalFactory.sol/Factory.json\";\nimport { getGasFeeDetails } from \"../utils/ethutil.js\";\nimport {\n  cacheContract,\n  fetchLevelABI,\n  getInjectedProvider,\n  restoreContract,\n  updateCachedContract,\n} from \"./contractutil\";\nimport { CORE_CONTRACT_NAMES, ID_TO_NETWORK } from \"../constants.js\";\nimport { loadTranslations } from \"../utils/translations\";\n\nconst logger = (text) => {\n  console.dir(colors.cyan(`<<  ${text.toUpperCase()}  >>`));\n};\n\nasync function deploySingleContract(\n  contractABI,\n  gasDetails,\n  from,\n  { deployParams = [] } = {}\n) {\n  logger(`Deploying ${contractABI.contractName} contract`);\n  const Contract = await ethutil.getTruffleContract(contractABI, {\n    from,\n  });\n  const contract = await Contract.new(...deployParams, gasDetails);\n  return contract;\n}\n\nconst confirmMainnetDeployment = (chainId) => {\n  if (\n    chainId === 1 ||\n    chainId === 1 || // Eth mainnet\n    chainId === 137 || // Polygon\n    chainId === 10 || // Optmism\n    chainId === 42161 || // Arbitrum\n    chainId === 56 // Binance\n  ) {\n    let language = localStorage.getItem(\"lang\");\n    const strings = loadTranslations(language);\n    const res = window.confirm(strings.confirmMainnetDeploy);\n    return res;\n  }\n  return true;\n}\n\nexport async function deployAndRegisterLevel(level) {\n  try {\n    const levelABI = fetchLevelABI(level);\n    const web3 = ethutil.getWeb3();\n    const chainId = await web3.eth.getChainId();\n    if (!confirmMainnetDeployment(chainId)) {\n      return false;\n    }\n    const gasDetails = await getGasFeeDetails({ networkId: chainId, web3: web3 }, 10);\n    const from = (await web3.eth.getAccounts())[0];\n    const levelContractAddress = await deploySingleContract(\n      levelABI,\n      { gas: 10000000, ...gasDetails },\n      from\n    );\n\n    logger(`Registering ${level.name} level on the ethernaut contract `);\n    // -- use the factory to register a new level since it owns the ethernaut contract\n    const factoryAddress = restoreContract(chainId)[\"factory\"];\n    const LocalFactory = await ethutil.getTruffleContract(LocalFactoryABI.default, {\n      from,\n    });\n    const localFactory = await LocalFactory.at(factoryAddress);\n    await localFactory.registerLevel(levelContractAddress.address, gasDetails);\n    // -- add this level factory instance to state\n    updateCachedContract(level.deployId, levelContractAddress.address, chainId);\n    return levelContractAddress;\n  } catch (err) {\n    console.log(err);\n    return false;\n    // alert(err.message);\n  }\n  // return contractAddress;\n}\n\nexport async function deployAdminContracts() {\n  try {\n    // -- get instance of metamask injected into the environment\n    const web3 = getInjectedProvider();\n    const chainId = await web3.eth.getChainId();\n    if (!confirmMainnetDeployment(chainId)) {\n      return false;\n    }\n    const gameData = restoreContract(chainId);\n\n    const gasDetails = await getGasFeeDetails({ networkId: chainId, web3: web3 }, 10);\n    const from = (await web3.eth.getAccounts())[0];\n\n    // -- deploy factory contracts\n    const factoryContracts = await deploySingleContract(\n      LocalFactoryABI.default,\n      { gas: 10000000, ...gasDetails },\n      from\n    );\n    // -- query factory address for ethernaut, proxy, proxyadmin and implementation\n    const deployedCoreContracts =\n      await Promise.all(\n        CORE_CONTRACT_NAMES.map((coreContractName) =>\n          factoryContracts[coreContractName]()\n        )\n      );\n\n    // -- update the game data array with contract values\n    CORE_CONTRACT_NAMES.forEach(\n      (key, index) => (gameData[key] = deployedCoreContracts[index])\n    );\n    gameData.factory = factoryContracts.address;\n    gameData.owner = from;\n    cacheContract(gameData, chainId);\n\n    // -- stop loader (unnecessary since refresh?)\n    const deployWindow = document.querySelectorAll(\".deploy-window-bg\");\n    deployWindow[0].style.display = \"none\";\n\n    // -- refresh page after deploying contracts\n    document.location.replace(document.location.origin);\n    return true;\n  } catch (err) {\n    // TODO maybe refresh the page if they fail to deploy the contracts\n    console.log(err);\n    // alert(err.message); //todo show a notification prompting the user to click something to restart the process\n    return false;\n  } finally {\n    // -- stop the loader\n    const elements = document.querySelectorAll(\".progress-bar-wrapper\");\n    elements[0].style.display = \"none\";\n  }\n}\n\nexport const getDeployData = (networkId) => {\n  const active_network = ID_TO_NETWORK[networkId];\n  const network = active_network;\n  let gameData = {};\n\n  try {\n    // try importing the game data file\n    gameData = require(`../gamedata/deploy.${network}.json`);\n  } catch (err) {\n    // if there's an error then check localstorage if data exists for this chain\n    gameData = restoreContract(networkId);\n  }\n\n  return gameData;\n};"],"sourceRoot":""}